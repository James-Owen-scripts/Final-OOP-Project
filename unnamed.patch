Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(revision d58f3bfd93b7c8b8287b7c6d29636c943d3f97aa)
+++ b/.idea/.gitignore	(revision d58f3bfd93b7c8b8287b7c6d29636c943d3f97aa)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: .idea/Final.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Final.iml b/.idea/Final.iml
new file mode 100644
--- /dev/null	(revision d58f3bfd93b7c8b8287b7c6d29636c943d3f97aa)
+++ b/.idea/Final.iml	(revision d58f3bfd93b7c8b8287b7c6d29636c943d3f97aa)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module classpath="CMake" type="CPP_MODULE" version="4" />
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(revision d58f3bfd93b7c8b8287b7c6d29636c943d3f97aa)
+++ b/.idea/misc.xml	(revision d58f3bfd93b7c8b8287b7c6d29636c943d3f97aa)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CMakeWorkspace" PROJECT_DIR="$PROJECT_DIR$" />
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(revision d58f3bfd93b7c8b8287b7c6d29636c943d3f97aa)
+++ b/.idea/modules.xml	(revision d58f3bfd93b7c8b8287b7c6d29636c943d3f97aa)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/Final.iml" filepath="$PROJECT_DIR$/.idea/Final.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(revision d58f3bfd93b7c8b8287b7c6d29636c943d3f97aa)
+++ b/.idea/vcs.xml	(revision d58f3bfd93b7c8b8287b7c6d29636c943d3f97aa)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: BasicCalculator.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BasicCalculator.cpp b/BasicCalculator.cpp
new file mode 100644
--- /dev/null	(revision cc91a736cf1037809026cb20804be01f78b5b621)
+++ b/BasicCalculator.cpp	(revision cc91a736cf1037809026cb20804be01f78b5b621)
@@ -0,0 +1,80 @@
+/*
+* Final Project
+* Author: James Owen
+* Student ID number: T00704318
+* File name: BasicCalculator.cpp
+* Requirements:
+*   Basic and scientific calculator application
+*/
+
+
+#include "BasicCalculator.h"
+
+// constructor
+BasicCalculator::BasicCalculator(double in) : Calculator(in) {}
+
+// destructor
+BasicCalculator::~BasicCalculator() {}
+
+// addition
+BasicCalculator operator + (BasicCalculator &opp1, BasicCalculator &opp2) {
+    BasicCalculator temp;
+    double in = opp1.getInput() + opp2.getInput();
+    temp.setInput(in);
+
+    return temp;
+}
+
+// subtraction
+BasicCalculator operator - (BasicCalculator &opp1, BasicCalculator &opp2) {
+    BasicCalculator temp;
+    double in = opp1.getInput() - opp2.getInput();
+    temp.setInput(in);
+
+    return temp;
+}
+
+// multiplication
+BasicCalculator operator * (BasicCalculator &opp1, BasicCalculator &opp2) {
+    BasicCalculator temp;
+    double in = opp1.getInput() * opp2.getInput();
+    temp.setInput(in);
+
+    return temp;
+}
+
+// division
+BasicCalculator operator / (BasicCalculator &opp1, BasicCalculator &opp2) {
+    BasicCalculator temp;
+    double in = 0;
+    if (opp2.getInput() == 0) {
+        throw std::runtime_error("Divide by zero exception");
+    }
+    in = opp1.getInput() / opp2.getInput();
+    temp.setInput(in);
+
+    return temp;
+}
+
+// square
+BasicCalculator BasicCalculator::square(BasicCalculator &opp) const {
+    BasicCalculator temp;
+    double in = opp.getInput() * opp.getInput();
+    temp.setInput(in);
+
+    return temp;
+}
+
+// square root
+BasicCalculator BasicCalculator::squareRoot(BasicCalculator &opp) const {
+    BasicCalculator temp;
+    double in = std::sqrt(opp.getInput());
+
+    temp.setInput(in);
+
+    return temp;
+}
+
+void BasicCalculator::display() {
+    std::cout << "Basic Calculator output: " << getInput() << std::endl;
+}
\ No newline at end of file
Index: BasicCalculator.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BasicCalculator.h b/BasicCalculator.h
new file mode 100644
--- /dev/null	(revision cc91a736cf1037809026cb20804be01f78b5b621)
+++ b/BasicCalculator.h	(revision cc91a736cf1037809026cb20804be01f78b5b621)
@@ -0,0 +1,48 @@
+/*
+* Final Project
+* Author: James Owen
+* Student ID number: T00704318
+* File name: BasicCalculator.h
+* Requirements:
+*   Basic and scientific calculator application
+*/
+
+#ifndef FINAL_BASICCALCULATOR_H
+#define FINAL_BASICCALCULATOR_H
+#include "Calculator.h"
+#include <cmath>
+#include <iostream>
+#include <stdexcept>
+
+
+class BasicCalculator : public Calculator {
+public:
+    // constructor
+    BasicCalculator(double = 0);
+    // destructor
+    ~BasicCalculator();
+
+    // addition operator overload
+    friend BasicCalculator operator + (BasicCalculator &, BasicCalculator &);
+
+    // subtraction operator overload
+    friend  BasicCalculator operator - (BasicCalculator &, BasicCalculator &);
+
+    // multiplication operator overload
+    friend  BasicCalculator operator * (BasicCalculator &, BasicCalculator &);
+
+    // division operator overload
+    friend BasicCalculator operator / (BasicCalculator &, BasicCalculator &);
+
+    // square operator overload
+    BasicCalculator square(BasicCalculator &) const;
+
+    // square root function
+    BasicCalculator squareRoot(BasicCalculator &) const;
+
+    // display
+    virtual void display() override;
+};
+
+
+#endif //FINAL_BASICCALCULATOR_H
Index: CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/CMakeLists.txt	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,9 @@
+cmake_minimum_required(VERSION 3.26)
+project(Final)
+
+set(CMAKE_CXX_STANDARD 17)
+
+add_executable(Final main.cpp
+        BasicCalculator.cpp
+        ScientificCalculator.cpp
+        Calculator.cpp)
Index: Calculator.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Calculator.cpp b/Calculator.cpp
new file mode 100644
--- /dev/null	(revision cc91a736cf1037809026cb20804be01f78b5b621)
+++ b/Calculator.cpp	(revision cc91a736cf1037809026cb20804be01f78b5b621)
@@ -0,0 +1,28 @@
+/*
+* Final Project
+* Author: James Owen
+* Student ID number: T00704318
+* File name: Calculator.cpp
+* Requirements:
+*   Basic and scientific calculator application
+*/
+
+#include "Calculator.h"
+
+// initialize input in constructor
+Calculator::Calculator(const double in) : input(in) {}
+
+// destructor
+Calculator::~Calculator() {}
+
+
+// setInput function
+void Calculator::setInput(const double in) {
+    input = in;
+}
+
+// getInput function
+double Calculator::getInput() const {
+    return input;
+}
+
Index: Calculator.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Calculator.h b/Calculator.h
new file mode 100644
--- /dev/null	(revision cc91a736cf1037809026cb20804be01f78b5b621)
+++ b/Calculator.h	(revision cc91a736cf1037809026cb20804be01f78b5b621)
@@ -0,0 +1,36 @@
+/*
+* Final Project
+* Author: James Owen
+* Student ID number: T00704318
+* File name: Calculator.h
+* Requirements:
+*   Basic and scientific calculator application
+*/
+
+#ifndef FINAL_CALCULATOR_H
+#define FINAL_CALCULATOR_H
+
+// calculator base class
+class Calculator {
+public:
+    // constructor
+    Calculator(const double = 0);
+
+    // destructor
+    ~Calculator();
+
+    // pure virtual display function
+    virtual void display() = 0;
+
+    // getter and setter for input variable
+    void setInput(const double = 0);
+    double getInput() const;
+
+private:
+    // input variable for user input
+    double input;
+
+};
+
+
+#endif //FINAL_CALCULATOR_H
Index: ScientificCalculator.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ScientificCalculator.cpp b/ScientificCalculator.cpp
new file mode 100644
--- /dev/null	(revision cc91a736cf1037809026cb20804be01f78b5b621)
+++ b/ScientificCalculator.cpp	(revision cc91a736cf1037809026cb20804be01f78b5b621)
@@ -0,0 +1,66 @@
+/*
+* Final Project
+* Author: James Owen
+* Student ID number: T00704318
+* File name: ScientificCalculator.cpp
+* Requirements:
+*   Basic and scientific calculator application
+*/
+
+#include "ScientificCalculator.h"
+
+// constructor
+ScientificCalculator::ScientificCalculator(double in) : BasicCalculator(in) {}
+
+// destructor
+ScientificCalculator::~ScientificCalculator() {}
+
+// sine
+ScientificCalculator ScientificCalculator::sin(ScientificCalculator &opp) const {
+    ScientificCalculator temp;
+    double radianAngle = opp.getInput() * M_PI / 180;
+    temp.setInput(std::sin(radianAngle));
+
+    return temp;
+}
+
+// cosine
+ScientificCalculator ScientificCalculator::cos(ScientificCalculator &opp) const {
+    ScientificCalculator temp;
+    double radianAngle = opp.getInput() * M_PI / 180;
+    temp.setInput(std::cos(radianAngle));
+
+    return temp;
+}
+
+// tangent
+ScientificCalculator ScientificCalculator::tan(ScientificCalculator &opp) const {
+    ScientificCalculator temp;
+    double radianAngle = opp.getInput() * M_PI / 180;
+    temp.setInput(std::tan(radianAngle));
+
+    return temp;
+}
+
+// absolute
+ScientificCalculator ScientificCalculator::abs(ScientificCalculator &opp) const {
+    ScientificCalculator temp;
+    double absVal = std::abs(opp.getInput());
+    temp.setInput(absVal);
+
+    return temp;
+}
+
+// power of
+ScientificCalculator ScientificCalculator::powerOf(ScientificCalculator &opp1, ScientificCalculator &opp2) const {
+    ScientificCalculator temp;
+    double in = std::pow(opp1.getInput(), opp2.getInput());
+
+    temp.setInput(in);
+    return temp;
+}
+
+// display
+void ScientificCalculator::display() {
+    std::cout << "Scientific Calculator Output: " << getInput() << std::endl;
+}
Index: ScientificCalculator.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ScientificCalculator.h b/ScientificCalculator.h
new file mode 100644
--- /dev/null	(revision cc91a736cf1037809026cb20804be01f78b5b621)
+++ b/ScientificCalculator.h	(revision cc91a736cf1037809026cb20804be01f78b5b621)
@@ -0,0 +1,41 @@
+/*
+* Final Project
+* Author: James Owen
+* Student ID number: T00704318
+* File name: ScientificCalculator.h
+* Requirements:
+*   Basic and scientific calculator application
+*/
+
+
+#ifndef FINAL_SCIENTIFICCALCULATOR_H
+#define FINAL_SCIENTIFICCALCULATOR_H
+#include "BasicCalculator.h"
+#include <cmath>
+#include <iostream>
+
+
+class ScientificCalculator : public BasicCalculator {
+public:
+    // constructor
+    ScientificCalculator(double = 0);
+    // destructor
+    ~ScientificCalculator();
+
+    // sin
+    ScientificCalculator sin (ScientificCalculator &) const;
+    // cos
+    ScientificCalculator cos (ScientificCalculator &) const;
+    // tan
+    ScientificCalculator tan (ScientificCalculator &) const;
+    // absolute
+    ScientificCalculator abs (ScientificCalculator &) const;
+    // power or
+    ScientificCalculator powerOf(ScientificCalculator &, ScientificCalculator &) const;
+
+    // display
+    void virtual display() override;
+};
+
+
+#endif //FINAL_SCIENTIFICCALCULATOR_H
Index: cmake-build-debug/.cmake/api/v1/reply/cache-v2-b96cf965cc79ba80a05b.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/.cmake/api/v1/reply/cache-v2-b96cf965cc79ba80a05b.json b/cmake-build-debug/.cmake/api/v1/reply/cache-v2-b96cf965cc79ba80a05b.json
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/.cmake/api/v1/reply/cache-v2-b96cf965cc79ba80a05b.json	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,1311 @@
+{
+	"entries" : 
+	[
+		{
+			"name" : "CMAKE_ADDR2LINE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/addr2line.exe"
+		},
+		{
+			"name" : "CMAKE_AR",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ar.exe"
+		},
+		{
+			"name" : "CMAKE_BUILD_TYPE",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ..."
+				}
+			],
+			"type" : "STRING",
+			"value" : "Debug"
+		},
+		{
+			"name" : "CMAKE_CACHEFILE_DIR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "This is the directory where this CMakeCache.txt was created"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "c:/Users/james/C++ code/Final/cmake-build-debug"
+		},
+		{
+			"name" : "CMAKE_CACHE_MAJOR_VERSION",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Major version of cmake used to create the current loaded cache"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "3"
+		},
+		{
+			"name" : "CMAKE_CACHE_MINOR_VERSION",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Minor version of cmake used to create the current loaded cache"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "26"
+		},
+		{
+			"name" : "CMAKE_CACHE_PATCH_VERSION",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Patch version of cmake used to create the current loaded cache"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "4"
+		},
+		{
+			"name" : "CMAKE_COLOR_DIAGNOSTICS",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Enable colored diagnostics throughout."
+				}
+			],
+			"type" : "BOOL",
+			"value" : "ON"
+		},
+		{
+			"name" : "CMAKE_COMMAND",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to CMake executable."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/bin/cmake.exe"
+		},
+		{
+			"name" : "CMAKE_CPACK_COMMAND",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to cpack program executable."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/bin/cpack.exe"
+		},
+		{
+			"name" : "CMAKE_CTEST_COMMAND",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to ctest program executable."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/bin/ctest.exe"
+		},
+		{
+			"name" : "CMAKE_CXX_COMPILER",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "CXX compiler"
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/g++.exe"
+		},
+		{
+			"name" : "CMAKE_CXX_COMPILER_AR",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "A wrapper around 'ar' adding the appropriate '--plugin' option for the GCC compiler"
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ar.exe"
+		},
+		{
+			"name" : "CMAKE_CXX_COMPILER_RANLIB",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "A wrapper around 'ranlib' adding the appropriate '--plugin' option for the GCC compiler"
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ranlib.exe"
+		},
+		{
+			"name" : "CMAKE_CXX_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the CXX compiler during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_CXX_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the CXX compiler during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-g"
+		},
+		{
+			"name" : "CMAKE_CXX_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the CXX compiler during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-Os -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_CXX_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the CXX compiler during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-O3 -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_CXX_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the CXX compiler during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-O2 -g -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_CXX_STANDARD_LIBRARIES",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Libraries linked by default with all C++ applications."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32"
+		},
+		{
+			"name" : "CMAKE_C_COMPILER",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "C compiler"
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc.exe"
+		},
+		{
+			"name" : "CMAKE_C_COMPILER_AR",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "A wrapper around 'ar' adding the appropriate '--plugin' option for the GCC compiler"
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ar.exe"
+		},
+		{
+			"name" : "CMAKE_C_COMPILER_RANLIB",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "A wrapper around 'ranlib' adding the appropriate '--plugin' option for the GCC compiler"
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ranlib.exe"
+		},
+		{
+			"name" : "CMAKE_C_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the C compiler during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_C_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the C compiler during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-g"
+		},
+		{
+			"name" : "CMAKE_C_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the C compiler during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-Os -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_C_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the C compiler during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-O3 -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_C_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the C compiler during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-O2 -g -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_C_STANDARD_LIBRARIES",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Libraries linked by default with all C applications."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32"
+		},
+		{
+			"name" : "CMAKE_DLLTOOL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/dlltool.exe"
+		},
+		{
+			"name" : "CMAKE_EXECUTABLE_FORMAT",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Executable file format"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "Unknown"
+		},
+		{
+			"name" : "CMAKE_EXE_LINKER_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXE_LINKER_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXE_LINKER_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXE_LINKER_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXPORT_COMPILE_COMMANDS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Enable/Disable output of compile commands during generation."
+				}
+			],
+			"type" : "BOOL",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXTRA_GENERATOR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Name of external makefile project generator."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_FIND_PACKAGE_REDIRECTS_DIR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake."
+				}
+			],
+			"type" : "STATIC",
+			"value" : "C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/pkgRedirects"
+		},
+		{
+			"name" : "CMAKE_GENERATOR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Name of generator."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "Ninja"
+		},
+		{
+			"name" : "CMAKE_GENERATOR_INSTANCE",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Generator instance identifier."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_GENERATOR_PLATFORM",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Name of generator platform."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_GENERATOR_TOOLSET",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Name of generator toolset."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_GNUtoMS",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Convert GNU import libraries to MS format (requires Visual Studio)"
+				}
+			],
+			"type" : "BOOL",
+			"value" : "OFF"
+		},
+		{
+			"name" : "CMAKE_HOME_DIRECTORY",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Source directory with the top level CMakeLists.txt file for this project"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "C:/Users/james/C++ code/Final"
+		},
+		{
+			"name" : "CMAKE_INSTALL_PREFIX",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Install path prefix, prepended onto install directories."
+				}
+			],
+			"type" : "PATH",
+			"value" : "C:/Program Files (x86)/Final"
+		},
+		{
+			"name" : "CMAKE_LINKER",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ld.exe"
+		},
+		{
+			"name" : "CMAKE_MAKE_PROGRAM",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "make program"
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/ninja/win/x64/ninja.exe"
+		},
+		{
+			"name" : "CMAKE_MODULE_LINKER_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of modules during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_MODULE_LINKER_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of modules during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of modules during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_MODULE_LINKER_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of modules during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_NM",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/nm.exe"
+		},
+		{
+			"name" : "CMAKE_NUMBER_OF_MAKEFILES",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "number of local generators"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "1"
+		},
+		{
+			"name" : "CMAKE_OBJCOPY",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/objcopy.exe"
+		},
+		{
+			"name" : "CMAKE_OBJDUMP",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/objdump.exe"
+		},
+		{
+			"name" : "CMAKE_PLATFORM_INFO_INITIALIZED",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Platform information initialized"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "1"
+		},
+		{
+			"name" : "CMAKE_PROJECT_DESCRIPTION",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_PROJECT_HOMEPAGE_URL",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_PROJECT_NAME",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : "Final"
+		},
+		{
+			"name" : "CMAKE_RANLIB",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ranlib.exe"
+		},
+		{
+			"name" : "CMAKE_RC_COMPILER",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "RC compiler"
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/windres.exe"
+		},
+		{
+			"name" : "CMAKE_RC_COMPILER_WORKS",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : ""
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "1"
+		},
+		{
+			"name" : "CMAKE_RC_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags for Windows Resource Compiler during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_RC_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags for Windows Resource Compiler during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_RC_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags for Windows Resource Compiler during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_RC_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags for Windows Resource Compiler during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_RC_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags for Windows Resource Compiler during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_READELF",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/readelf.exe"
+		},
+		{
+			"name" : "CMAKE_ROOT",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to CMake installation."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26"
+		},
+		{
+			"name" : "CMAKE_SHARED_LINKER_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of shared libraries during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_SHARED_LINKER_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of shared libraries during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_SHARED_LINKER_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of shared libraries during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_SKIP_INSTALL_RPATH",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "If set, runtime paths are not added when installing shared libraries, but are added when building."
+				}
+			],
+			"type" : "BOOL",
+			"value" : "NO"
+		},
+		{
+			"name" : "CMAKE_SKIP_RPATH",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "If set, runtime paths are not added when using shared libraries."
+				}
+			],
+			"type" : "BOOL",
+			"value" : "NO"
+		},
+		{
+			"name" : "CMAKE_STATIC_LINKER_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of static libraries during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_STATIC_LINKER_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of static libraries during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of static libraries during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_STATIC_LINKER_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of static libraries during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_STRIP",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/strip.exe"
+		},
+		{
+			"name" : "CMAKE_VERBOSE_MAKEFILE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo."
+				}
+			],
+			"type" : "BOOL",
+			"value" : "FALSE"
+		},
+		{
+			"name" : "Final_BINARY_DIR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : "C:/Users/james/C++ code/Final/cmake-build-debug"
+		},
+		{
+			"name" : "Final_IS_TOP_LEVEL",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : "ON"
+		},
+		{
+			"name" : "Final_SOURCE_DIR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : "C:/Users/james/C++ code/Final"
+		},
+		{
+			"name" : "_CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "linker supports push/pop state"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "TRUE"
+		}
+	],
+	"kind" : "cache",
+	"version" : 
+	{
+		"major" : 2,
+		"minor" : 0
+	}
+}
Index: cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-493fd23a321098cd53fa.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-493fd23a321098cd53fa.json b/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-493fd23a321098cd53fa.json
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-493fd23a321098cd53fa.json	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,160 @@
+{
+	"inputs" : 
+	[
+		{
+			"path" : "CMakeLists.txt"
+		},
+		{
+			"isGenerated" : true,
+			"path" : "cmake-build-debug/CMakeFiles/3.26.4/CMakeSystem.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeSystemSpecificInitialize.cmake"
+		},
+		{
+			"isGenerated" : true,
+			"path" : "cmake-build-debug/CMakeFiles/3.26.4/CMakeCCompiler.cmake"
+		},
+		{
+			"isGenerated" : true,
+			"path" : "cmake-build-debug/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeSystemSpecificInformation.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeGenericSystem.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeInitializeConfigs.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/WindowsPaths.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCInformation.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeLanguageInformation.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/GNU-C.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/GNU.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-C.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU.cmake"
+		},
+		{
+			"isGenerated" : true,
+			"path" : "cmake-build-debug/CMakeFiles/3.26.4/CMakeRCCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeRCInformation.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-windres.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-C-ABI.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCommonLanguageInclude.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCXXInformation.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeLanguageInformation.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/GNU-CXX.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/GNU.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-CXX.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-CXX-ABI.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCommonLanguageInclude.cmake"
+		}
+	],
+	"kind" : "cmakeFiles",
+	"paths" : 
+	{
+		"build" : "C:/Users/james/C++ code/Final/cmake-build-debug",
+		"source" : "C:/Users/james/C++ code/Final"
+	},
+	"version" : 
+	{
+		"major" : 1,
+		"minor" : 0
+	}
+}
Index: cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-372a96a66e9389152b35.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-372a96a66e9389152b35.json b/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-372a96a66e9389152b35.json
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-372a96a66e9389152b35.json	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,60 @@
+{
+	"configurations" : 
+	[
+		{
+			"directories" : 
+			[
+				{
+					"build" : ".",
+					"jsonFile" : "directory-.-Debug-d0094a50bb2071803777.json",
+					"minimumCMakeVersion" : 
+					{
+						"string" : "3.26"
+					},
+					"projectIndex" : 0,
+					"source" : ".",
+					"targetIndexes" : 
+					[
+						0
+					]
+				}
+			],
+			"name" : "Debug",
+			"projects" : 
+			[
+				{
+					"directoryIndexes" : 
+					[
+						0
+					],
+					"name" : "Final",
+					"targetIndexes" : 
+					[
+						0
+					]
+				}
+			],
+			"targets" : 
+			[
+				{
+					"directoryIndex" : 0,
+					"id" : "Final::@6890427a1f51a3e7e1df",
+					"jsonFile" : "target-Final-Debug-3c5b0edd54661633e78c.json",
+					"name" : "Final",
+					"projectIndex" : 0
+				}
+			]
+		}
+	],
+	"kind" : "codemodel",
+	"paths" : 
+	{
+		"build" : "C:/Users/james/C++ code/Final/cmake-build-debug",
+		"source" : "C:/Users/james/C++ code/Final"
+	},
+	"version" : 
+	{
+		"major" : 2,
+		"minor" : 5
+	}
+}
Index: cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json b/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,14 @@
+{
+	"backtraceGraph" : 
+	{
+		"commands" : [],
+		"files" : [],
+		"nodes" : []
+	},
+	"installers" : [],
+	"paths" : 
+	{
+		"build" : ".",
+		"source" : "."
+	}
+}
Index: cmake-build-debug/.cmake/api/v1/reply/index-2023-12-11T07-41-54-0056.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/.cmake/api/v1/reply/index-2023-12-11T07-41-54-0056.json b/cmake-build-debug/.cmake/api/v1/reply/index-2023-12-11T07-41-54-0056.json
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/.cmake/api/v1/reply/index-2023-12-11T07-41-54-0056.json	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,108 @@
+{
+	"cmake" : 
+	{
+		"generator" : 
+		{
+			"multiConfig" : false,
+			"name" : "Ninja"
+		},
+		"paths" : 
+		{
+			"cmake" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/bin/cmake.exe",
+			"cpack" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/bin/cpack.exe",
+			"ctest" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/bin/ctest.exe",
+			"root" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26"
+		},
+		"version" : 
+		{
+			"isDirty" : false,
+			"major" : 3,
+			"minor" : 26,
+			"patch" : 4,
+			"string" : "3.26.4",
+			"suffix" : ""
+		}
+	},
+	"objects" : 
+	[
+		{
+			"jsonFile" : "codemodel-v2-372a96a66e9389152b35.json",
+			"kind" : "codemodel",
+			"version" : 
+			{
+				"major" : 2,
+				"minor" : 5
+			}
+		},
+		{
+			"jsonFile" : "cache-v2-b96cf965cc79ba80a05b.json",
+			"kind" : "cache",
+			"version" : 
+			{
+				"major" : 2,
+				"minor" : 0
+			}
+		},
+		{
+			"jsonFile" : "cmakeFiles-v1-493fd23a321098cd53fa.json",
+			"kind" : "cmakeFiles",
+			"version" : 
+			{
+				"major" : 1,
+				"minor" : 0
+			}
+		},
+		{
+			"jsonFile" : "toolchains-v1-3cb7ac949bd4d029da2a.json",
+			"kind" : "toolchains",
+			"version" : 
+			{
+				"major" : 1,
+				"minor" : 0
+			}
+		}
+	],
+	"reply" : 
+	{
+		"cache-v2" : 
+		{
+			"jsonFile" : "cache-v2-b96cf965cc79ba80a05b.json",
+			"kind" : "cache",
+			"version" : 
+			{
+				"major" : 2,
+				"minor" : 0
+			}
+		},
+		"cmakeFiles-v1" : 
+		{
+			"jsonFile" : "cmakeFiles-v1-493fd23a321098cd53fa.json",
+			"kind" : "cmakeFiles",
+			"version" : 
+			{
+				"major" : 1,
+				"minor" : 0
+			}
+		},
+		"codemodel-v2" : 
+		{
+			"jsonFile" : "codemodel-v2-372a96a66e9389152b35.json",
+			"kind" : "codemodel",
+			"version" : 
+			{
+				"major" : 2,
+				"minor" : 5
+			}
+		},
+		"toolchains-v1" : 
+		{
+			"jsonFile" : "toolchains-v1-3cb7ac949bd4d029da2a.json",
+			"kind" : "toolchains",
+			"version" : 
+			{
+				"major" : 1,
+				"minor" : 0
+			}
+		}
+	}
+}
Index: cmake-build-debug/.cmake/api/v1/reply/target-Final-Debug-3c5b0edd54661633e78c.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/.cmake/api/v1/reply/target-Final-Debug-3c5b0edd54661633e78c.json b/cmake-build-debug/.cmake/api/v1/reply/target-Final-Debug-3c5b0edd54661633e78c.json
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/.cmake/api/v1/reply/target-Final-Debug-3c5b0edd54661633e78c.json	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,130 @@
+{
+	"artifacts" : 
+	[
+		{
+			"path" : "Final.exe"
+		},
+		{
+			"path" : "Final.pdb"
+		}
+	],
+	"backtrace" : 1,
+	"backtraceGraph" : 
+	{
+		"commands" : 
+		[
+			"add_executable"
+		],
+		"files" : 
+		[
+			"CMakeLists.txt"
+		],
+		"nodes" : 
+		[
+			{
+				"file" : 0
+			},
+			{
+				"command" : 0,
+				"file" : 0,
+				"line" : 6,
+				"parent" : 0
+			}
+		]
+	},
+	"compileGroups" : 
+	[
+		{
+			"compileCommandFragments" : 
+			[
+				{
+					"fragment" : "-g -fdiagnostics-color=always"
+				}
+			],
+			"language" : "CXX",
+			"languageStandard" : 
+			{
+				"backtraces" : 
+				[
+					1
+				],
+				"standard" : "17"
+			},
+			"sourceIndexes" : 
+			[
+				0,
+				1,
+				2,
+				3
+			]
+		}
+	],
+	"id" : "Final::@6890427a1f51a3e7e1df",
+	"link" : 
+	{
+		"commandFragments" : 
+		[
+			{
+				"fragment" : "-g",
+				"role" : "flags"
+			},
+			{
+				"fragment" : "",
+				"role" : "flags"
+			},
+			{
+				"fragment" : "-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32",
+				"role" : "libraries"
+			}
+		],
+		"language" : "CXX"
+	},
+	"name" : "Final",
+	"nameOnDisk" : "Final.exe",
+	"paths" : 
+	{
+		"build" : ".",
+		"source" : "."
+	},
+	"sourceGroups" : 
+	[
+		{
+			"name" : "Source Files",
+			"sourceIndexes" : 
+			[
+				0,
+				1,
+				2,
+				3
+			]
+		}
+	],
+	"sources" : 
+	[
+		{
+			"backtrace" : 1,
+			"compileGroupIndex" : 0,
+			"path" : "main.cpp",
+			"sourceGroupIndex" : 0
+		},
+		{
+			"backtrace" : 1,
+			"compileGroupIndex" : 0,
+			"path" : "BasicCalculator.cpp",
+			"sourceGroupIndex" : 0
+		},
+		{
+			"backtrace" : 1,
+			"compileGroupIndex" : 0,
+			"path" : "ScientificCalculator.cpp",
+			"sourceGroupIndex" : 0
+		},
+		{
+			"backtrace" : 1,
+			"compileGroupIndex" : 0,
+			"path" : "Calculator.cpp",
+			"sourceGroupIndex" : 0
+		}
+	],
+	"type" : "EXECUTABLE"
+}
Index: cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-3cb7ac949bd4d029da2a.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-3cb7ac949bd4d029da2a.json b/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-3cb7ac949bd4d029da2a.json
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-3cb7ac949bd4d029da2a.json	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,90 @@
+{
+	"kind" : "toolchains",
+	"toolchains" : 
+	[
+		{
+			"compiler" : 
+			{
+				"id" : "GNU",
+				"implicit" : 
+				{
+					"includeDirectories" : 
+					[
+						"C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include",
+						"C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/include",
+						"C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed",
+						"C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/x86_64-w64-mingw32/include"
+					],
+					"linkDirectories" : [],
+					"linkFrameworkDirectories" : [],
+					"linkLibraries" : []
+				},
+				"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc.exe",
+				"version" : "13.1.0"
+			},
+			"language" : "C",
+			"sourceFileExtensions" : 
+			[
+				"c",
+				"m"
+			]
+		},
+		{
+			"compiler" : 
+			{
+				"id" : "GNU",
+				"implicit" : 
+				{
+					"includeDirectories" : 
+					[
+						"C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++",
+						"C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32",
+						"C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward",
+						"C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include",
+						"C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/include",
+						"C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed",
+						"C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/x86_64-w64-mingw32/include"
+					],
+					"linkDirectories" : [],
+					"linkFrameworkDirectories" : [],
+					"linkLibraries" : []
+				},
+				"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/g++.exe",
+				"version" : "13.1.0"
+			},
+			"language" : "CXX",
+			"sourceFileExtensions" : 
+			[
+				"C",
+				"M",
+				"c++",
+				"cc",
+				"cpp",
+				"cxx",
+				"mm",
+				"mpp",
+				"CPP",
+				"ixx",
+				"cppm"
+			]
+		},
+		{
+			"compiler" : 
+			{
+				"implicit" : {},
+				"path" : "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/windres.exe"
+			},
+			"language" : "RC",
+			"sourceFileExtensions" : 
+			[
+				"rc",
+				"RC"
+			]
+		}
+	],
+	"version" : 
+	{
+		"major" : 1,
+		"minor" : 0
+	}
+}
Index: cmake-build-debug/.ninja_log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/.ninja_log b/cmake-build-debug/.ninja_log
new file mode 100644
--- /dev/null	(revision cc91a736cf1037809026cb20804be01f78b5b621)
+++ b/cmake-build-debug/.ninja_log	(revision cc91a736cf1037809026cb20804be01f78b5b621)
@@ -0,0 +1,79 @@
+# ninja log v5
+0	565	7239832208795940	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+18	321	7239835407772090	CMakeFiles/Final.dir/BasicCalculator.cpp.obj	8d6f251d5af5a921
+2	305	7239835407615791	CMakeFiles/Final.dir/ScientificCalculator.cpp.obj	615fe57388cbffc8
+4	101	7239837174102230	CMakeFiles/Final.dir/Calculator.cpp.obj	a031b9d93b122682
+102	282	7239837175784822	Final.exe	53cbbae91f165b8a
+2	374	7239840269543761	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+374	477	7239840270461091	Final.exe	53cbbae91f165b8a
+2	350	7239841082322865	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+351	439	7239841083111280	Final.exe	53cbbae91f165b8a
+34	513	7240411636207675	CMakeFiles/Final.dir/ScientificCalculator.cpp.obj	615fe57388cbffc8
+58	577	7240411636584929	CMakeFiles/Final.dir/BasicCalculator.cpp.obj	8d6f251d5af5a921
+3	632	7240411637404985	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+632	893	7240411639833540	Final.exe	53cbbae91f165b8a
+2	342	7240411863341903	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+342	448	7240411864258676	Final.exe	53cbbae91f165b8a
+2	354	7240412023347662	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+354	451	7240412024195215	Final.exe	53cbbae91f165b8a
+4	479	7240413620004042	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+480	627	7240413621300895	Final.exe	53cbbae91f165b8a
+2	407	7240414273057908	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+407	514	7240414274001923	Final.exe	53cbbae91f165b8a
+2	406	7240414805824194	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+406	501	7240414806652564	Final.exe	53cbbae91f165b8a
+2	364	7240416180185227	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+364	465	7240416181070300	Final.exe	53cbbae91f165b8a
+2	369	7240417078981660	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+370	487	7240417079983918	Final.exe	53cbbae91f165b8a
+2	399	7240421271321646	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+399	546	7240421272370561	Final.exe	53cbbae91f165b8a
+3	475	7240423426375069	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+475	646	7240423427886620	Final.exe	53cbbae91f165b8a
+2	519	7240424076362330	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+520	671	7240424077691773	Final.exe	53cbbae91f165b8a
+2	353	7240425500265584	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+353	455	7240425501164213	Final.exe	53cbbae91f165b8a
+2	355	7240425794346568	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+355	453	7240425795184524	Final.exe	53cbbae91f165b8a
+2	382	7240427018036418	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+383	489	7240427018943027	Final.exe	53cbbae91f165b8a
+2	350	7240428001226072	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+351	455	7240428002142640	Final.exe	53cbbae91f165b8a
+2	428	7240429600935912	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+428	531	7240429601829485	Final.exe	53cbbae91f165b8a
+3	506	7240431423555887	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+506	669	7240431425008475	Final.exe	53cbbae91f165b8a
+3	1071	7240447935402485	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+1071	1355	7240447937920925	Final.exe	53cbbae91f165b8a
+2	377	7240449468842437	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+377	481	7240449469755710	Final.exe	53cbbae91f165b8a
+2	404	7240451834139021	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+405	521	7240451835024125	Final.exe	53cbbae91f165b8a
+3	1156	7240463295043740	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+1156	1444	7240463297751752	Final.exe	53cbbae91f165b8a
+2	375	7240464713227662	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+375	471	7240464714141985	Final.exe	53cbbae91f165b8a
+2	396	7240465014914151	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+396	486	7240465015703491	Final.exe	53cbbae91f165b8a
+2	362	7240468437397606	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+362	470	7240468438351062	Final.exe	53cbbae91f165b8a
+2	412	7240468864631139	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+412	553	7240468865477413	Final.exe	53cbbae91f165b8a
+2	377	7240472019461798	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+377	477	7240472020337797	Final.exe	53cbbae91f165b8a
+2	395	7240472699973442	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+395	513	7240472700999772	Final.exe	53cbbae91f165b8a
+3	419	7240475951017469	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+420	579	7240475952174780	Final.exe	53cbbae91f165b8a
+4	616	7240479299907445	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+616	823	7240479301729569	Final.exe	53cbbae91f165b8a
+2	371	7240699501835170	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+371	564	7240699503746577	Final.exe	53cbbae91f165b8a
+15	90	7240757771400811	CMakeFiles/Final.dir/Calculator.cpp.obj	a031b9d93b122682
+11	1225	7240757782551181	CMakeFiles/Final.dir/BasicCalculator.cpp.obj	8d6f251d5af5a921
+7	1226	7240757782551181	CMakeFiles/Final.dir/ScientificCalculator.cpp.obj	615fe57388cbffc8
+3	1359	7240757784137529	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+1359	1529	7240757785713342	Final.exe	53cbbae91f165b8a
+2	379	7240768965212046	CMakeFiles/Final.dir/main.cpp.obj	1e4f68ec253688f0
+379	448	7240768965876682	Final.exe	53cbbae91f165b8a
Index: cmake-build-debug/CMakeCache.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeCache.txt b/cmake-build-debug/CMakeCache.txt
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeCache.txt	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,410 @@
+# This is the CMakeCache file.
+# For build in directory: c:/Users/james/C++ code/Final/cmake-build-debug
+# It was generated by CMake: C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/bin/cmake.exe
+# You can edit this file to change values found and used by cmake.
+# If you do not want to change any of the values, simply exit the editor.
+# If you do want to change a value, simply edit, save, and exit the editor.
+# The syntax for the file is as follows:
+# KEY:TYPE=VALUE
+# KEY is the name of a variable in the cache.
+# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
+# VALUE is the current value for the KEY.
+
+########################
+# EXTERNAL cache entries
+########################
+
+//Path to a program.
+CMAKE_ADDR2LINE:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/addr2line.exe
+
+//Path to a program.
+CMAKE_AR:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ar.exe
+
+//Choose the type of build, options are: None Debug Release RelWithDebInfo
+// MinSizeRel ...
+CMAKE_BUILD_TYPE:STRING=Debug
+
+//Enable colored diagnostics throughout.
+CMAKE_COLOR_DIAGNOSTICS:BOOL=ON
+
+//CXX compiler
+CMAKE_CXX_COMPILER:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/g++.exe
+
+//A wrapper around 'ar' adding the appropriate '--plugin' option
+// for the GCC compiler
+CMAKE_CXX_COMPILER_AR:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ar.exe
+
+//A wrapper around 'ranlib' adding the appropriate '--plugin' option
+// for the GCC compiler
+CMAKE_CXX_COMPILER_RANLIB:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ranlib.exe
+
+//Flags used by the CXX compiler during all build types.
+CMAKE_CXX_FLAGS:STRING=
+
+//Flags used by the CXX compiler during DEBUG builds.
+CMAKE_CXX_FLAGS_DEBUG:STRING=-g
+
+//Flags used by the CXX compiler during MINSIZEREL builds.
+CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
+
+//Flags used by the CXX compiler during RELEASE builds.
+CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
+
+//Flags used by the CXX compiler during RELWITHDEBINFO builds.
+CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
+
+//Libraries linked by default with all C++ applications.
+CMAKE_CXX_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
+
+//C compiler
+CMAKE_C_COMPILER:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc.exe
+
+//A wrapper around 'ar' adding the appropriate '--plugin' option
+// for the GCC compiler
+CMAKE_C_COMPILER_AR:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ar.exe
+
+//A wrapper around 'ranlib' adding the appropriate '--plugin' option
+// for the GCC compiler
+CMAKE_C_COMPILER_RANLIB:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ranlib.exe
+
+//Flags used by the C compiler during all build types.
+CMAKE_C_FLAGS:STRING=
+
+//Flags used by the C compiler during DEBUG builds.
+CMAKE_C_FLAGS_DEBUG:STRING=-g
+
+//Flags used by the C compiler during MINSIZEREL builds.
+CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
+
+//Flags used by the C compiler during RELEASE builds.
+CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
+
+//Flags used by the C compiler during RELWITHDEBINFO builds.
+CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
+
+//Libraries linked by default with all C applications.
+CMAKE_C_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
+
+//Path to a program.
+CMAKE_DLLTOOL:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/dlltool.exe
+
+//Flags used by the linker during all build types.
+CMAKE_EXE_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during DEBUG builds.
+CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during MINSIZEREL builds.
+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during RELEASE builds.
+CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during RELWITHDEBINFO builds.
+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Enable/Disable output of compile commands during generation.
+CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=
+
+//Value Computed by CMake.
+CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/pkgRedirects
+
+//Convert GNU import libraries to MS format (requires Visual Studio)
+CMAKE_GNUtoMS:BOOL=OFF
+
+//Install path prefix, prepended onto install directories.
+CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/Final
+
+//Path to a program.
+CMAKE_LINKER:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ld.exe
+
+//make program
+CMAKE_MAKE_PROGRAM:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/ninja/win/x64/ninja.exe
+
+//Flags used by the linker during the creation of modules during
+// all build types.
+CMAKE_MODULE_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during the creation of modules during
+// DEBUG builds.
+CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during the creation of modules during
+// MINSIZEREL builds.
+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during the creation of modules during
+// RELEASE builds.
+CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during the creation of modules during
+// RELWITHDEBINFO builds.
+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_NM:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/nm.exe
+
+//Path to a program.
+CMAKE_OBJCOPY:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/objcopy.exe
+
+//Path to a program.
+CMAKE_OBJDUMP:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/objdump.exe
+
+//Value Computed by CMake
+CMAKE_PROJECT_DESCRIPTION:STATIC=
+
+//Value Computed by CMake
+CMAKE_PROJECT_HOMEPAGE_URL:STATIC=
+
+//Value Computed by CMake
+CMAKE_PROJECT_NAME:STATIC=Final
+
+//Path to a program.
+CMAKE_RANLIB:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ranlib.exe
+
+//RC compiler
+CMAKE_RC_COMPILER:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/windres.exe
+
+//Flags for Windows Resource Compiler during all build types.
+CMAKE_RC_FLAGS:STRING=
+
+//Flags for Windows Resource Compiler during DEBUG builds.
+CMAKE_RC_FLAGS_DEBUG:STRING=
+
+//Flags for Windows Resource Compiler during MINSIZEREL builds.
+CMAKE_RC_FLAGS_MINSIZEREL:STRING=
+
+//Flags for Windows Resource Compiler during RELEASE builds.
+CMAKE_RC_FLAGS_RELEASE:STRING=
+
+//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
+CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_READELF:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/readelf.exe
+
+//Flags used by the linker during the creation of shared libraries
+// during all build types.
+CMAKE_SHARED_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during DEBUG builds.
+CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during MINSIZEREL builds.
+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during RELEASE builds.
+CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during RELWITHDEBINFO builds.
+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//If set, runtime paths are not added when installing shared libraries,
+// but are added when building.
+CMAKE_SKIP_INSTALL_RPATH:BOOL=NO
+
+//If set, runtime paths are not added when using shared libraries.
+CMAKE_SKIP_RPATH:BOOL=NO
+
+//Flags used by the linker during the creation of static libraries
+// during all build types.
+CMAKE_STATIC_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during DEBUG builds.
+CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during MINSIZEREL builds.
+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during RELEASE builds.
+CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during RELWITHDEBINFO builds.
+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_STRIP:FILEPATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/strip.exe
+
+//If this value is on, makefiles will be generated without the
+// .SILENT directive, and all commands will be echoed to the console
+// during the make.  This is useful for debugging only. With Visual
+// Studio IDE projects all commands are done without /nologo.
+CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
+
+//Value Computed by CMake
+Final_BINARY_DIR:STATIC=C:/Users/james/C++ code/Final/cmake-build-debug
+
+//Value Computed by CMake
+Final_IS_TOP_LEVEL:STATIC=ON
+
+//Value Computed by CMake
+Final_SOURCE_DIR:STATIC=C:/Users/james/C++ code/Final
+
+
+########################
+# INTERNAL cache entries
+########################
+
+//ADVANCED property for variable: CMAKE_ADDR2LINE
+CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_AR
+CMAKE_AR-ADVANCED:INTERNAL=1
+//This is the directory where this CMakeCache.txt was created
+CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/james/C++ code/Final/cmake-build-debug
+//Major version of cmake used to create the current loaded cache
+CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
+//Minor version of cmake used to create the current loaded cache
+CMAKE_CACHE_MINOR_VERSION:INTERNAL=26
+//Patch version of cmake used to create the current loaded cache
+CMAKE_CACHE_PATCH_VERSION:INTERNAL=4
+//Path to CMake executable.
+CMAKE_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/bin/cmake.exe
+//Path to cpack program executable.
+CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/bin/cpack.exe
+//Path to ctest program executable.
+CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/bin/ctest.exe
+//ADVANCED property for variable: CMAKE_CXX_COMPILER
+CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
+CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
+CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS
+CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
+CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
+CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
+CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
+CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
+CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_COMPILER
+CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_COMPILER_AR
+CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
+CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS
+CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
+CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
+CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
+CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
+CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
+CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_DLLTOOL
+CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
+//Executable file format
+CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
+CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
+CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
+CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
+CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
+//Name of external makefile project generator.
+CMAKE_EXTRA_GENERATOR:INTERNAL=
+//Name of generator.
+CMAKE_GENERATOR:INTERNAL=Ninja
+//Generator instance identifier.
+CMAKE_GENERATOR_INSTANCE:INTERNAL=
+//Name of generator platform.
+CMAKE_GENERATOR_PLATFORM:INTERNAL=
+//Name of generator toolset.
+CMAKE_GENERATOR_TOOLSET:INTERNAL=
+//Source directory with the top level CMakeLists.txt file for this
+// project
+CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/james/C++ code/Final
+//ADVANCED property for variable: CMAKE_LINKER
+CMAKE_LINKER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
+CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
+CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
+CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_NM
+CMAKE_NM-ADVANCED:INTERNAL=1
+//number of local generators
+CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
+//ADVANCED property for variable: CMAKE_OBJCOPY
+CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_OBJDUMP
+CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
+//Platform information initialized
+CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RANLIB
+CMAKE_RANLIB-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_COMPILER
+CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
+CMAKE_RC_COMPILER_WORKS:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_FLAGS
+CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
+CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
+CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
+CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
+CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_READELF
+CMAKE_READELF-ADVANCED:INTERNAL=1
+//Path to CMake installation.
+CMAKE_ROOT:INTERNAL=C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
+CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
+CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
+CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
+CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SKIP_RPATH
+CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
+CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
+CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
+CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STRIP
+CMAKE_STRIP-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
+CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
+//linker supports push/pop state
+_CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED:INTERNAL=TRUE
+
Index: cmake-build-debug/CMakeFiles/3.26.4/CMakeCCompiler.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/3.26.4/CMakeCCompiler.cmake b/cmake-build-debug/CMakeFiles/3.26.4/CMakeCCompiler.cmake
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/3.26.4/CMakeCCompiler.cmake	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,72 @@
+set(CMAKE_C_COMPILER "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc.exe")
+set(CMAKE_C_COMPILER_ARG1 "")
+set(CMAKE_C_COMPILER_ID "GNU")
+set(CMAKE_C_COMPILER_VERSION "13.1.0")
+set(CMAKE_C_COMPILER_VERSION_INTERNAL "")
+set(CMAKE_C_COMPILER_WRAPPER "")
+set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "17")
+set(CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT "ON")
+set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert;c_std_17;c_std_23")
+set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")
+set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")
+set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")
+set(CMAKE_C17_COMPILE_FEATURES "c_std_17")
+set(CMAKE_C23_COMPILE_FEATURES "c_std_23")
+
+set(CMAKE_C_PLATFORM_ID "MinGW")
+set(CMAKE_C_SIMULATE_ID "")
+set(CMAKE_C_COMPILER_FRONTEND_VARIANT "GNU")
+set(CMAKE_C_SIMULATE_VERSION "")
+
+
+
+
+set(CMAKE_AR "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ar.exe")
+set(CMAKE_C_COMPILER_AR "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ar.exe")
+set(CMAKE_RANLIB "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ranlib.exe")
+set(CMAKE_C_COMPILER_RANLIB "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ranlib.exe")
+set(CMAKE_LINKER "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ld.exe")
+set(CMAKE_MT "")
+set(CMAKE_COMPILER_IS_GNUCC 1)
+set(CMAKE_C_COMPILER_LOADED 1)
+set(CMAKE_C_COMPILER_WORKS TRUE)
+set(CMAKE_C_ABI_COMPILED TRUE)
+
+set(CMAKE_C_COMPILER_ENV_VAR "CC")
+
+set(CMAKE_C_COMPILER_ID_RUN 1)
+set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)
+set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)
+set(CMAKE_C_LINKER_PREFERENCE 10)
+
+# Save compiler ABI information.
+set(CMAKE_C_SIZEOF_DATA_PTR "8")
+set(CMAKE_C_COMPILER_ABI "")
+set(CMAKE_C_BYTE_ORDER "LITTLE_ENDIAN")
+set(CMAKE_C_LIBRARY_ARCHITECTURE "")
+
+if(CMAKE_C_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_C_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")
+endif()
+
+if(CMAKE_C_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "")
+endif()
+
+set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")
+if(CMAKE_C_CL_SHOWINCLUDES_PREFIX)
+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")
+endif()
+
+
+
+
+
+set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/include;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/x86_64-w64-mingw32/include")
+set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "")
+set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "")
+set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
Index: cmake-build-debug/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake b/cmake-build-debug/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/3.26.4/CMakeCXXCompiler.cmake	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,83 @@
+set(CMAKE_CXX_COMPILER "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/g++.exe")
+set(CMAKE_CXX_COMPILER_ARG1 "")
+set(CMAKE_CXX_COMPILER_ID "GNU")
+set(CMAKE_CXX_COMPILER_VERSION "13.1.0")
+set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
+set(CMAKE_CXX_COMPILER_WRAPPER "")
+set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "17")
+set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")
+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23")
+set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
+set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
+set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
+set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
+set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
+set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")
+
+set(CMAKE_CXX_PLATFORM_ID "MinGW")
+set(CMAKE_CXX_SIMULATE_ID "")
+set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "GNU")
+set(CMAKE_CXX_SIMULATE_VERSION "")
+
+
+
+
+set(CMAKE_AR "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ar.exe")
+set(CMAKE_CXX_COMPILER_AR "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ar.exe")
+set(CMAKE_RANLIB "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ranlib.exe")
+set(CMAKE_CXX_COMPILER_RANLIB "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc-ranlib.exe")
+set(CMAKE_LINKER "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/ld.exe")
+set(CMAKE_MT "")
+set(CMAKE_COMPILER_IS_GNUCXX 1)
+set(CMAKE_CXX_COMPILER_LOADED 1)
+set(CMAKE_CXX_COMPILER_WORKS TRUE)
+set(CMAKE_CXX_ABI_COMPILED TRUE)
+
+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
+
+set(CMAKE_CXX_COMPILER_ID_RUN 1)
+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm)
+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
+
+foreach (lang C OBJC OBJCXX)
+  if (CMAKE_${lang}_COMPILER_ID_RUN)
+    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
+      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
+    endforeach()
+  endif()
+endforeach()
+
+set(CMAKE_CXX_LINKER_PREFERENCE 30)
+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
+
+# Save compiler ABI information.
+set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
+set(CMAKE_CXX_COMPILER_ABI "")
+set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")
+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
+
+if(CMAKE_CXX_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_CXX_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
+endif()
+
+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "")
+endif()
+
+set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
+if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
+endif()
+
+
+
+
+
+set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/include;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/x86_64-w64-mingw32/include")
+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "")
+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "")
+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
Index: cmake-build-debug/CMakeFiles/3.26.4/CMakeRCCompiler.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/3.26.4/CMakeRCCompiler.cmake b/cmake-build-debug/CMakeFiles/3.26.4/CMakeRCCompiler.cmake
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/3.26.4/CMakeRCCompiler.cmake	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,6 @@
+set(CMAKE_RC_COMPILER "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/windres.exe")
+set(CMAKE_RC_COMPILER_ARG1 "")
+set(CMAKE_RC_COMPILER_LOADED 1)
+set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC)
+set(CMAKE_RC_OUTPUT_EXTENSION .obj)
+set(CMAKE_RC_COMPILER_ENV_VAR "RC")
Index: cmake-build-debug/CMakeFiles/3.26.4/CMakeSystem.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/3.26.4/CMakeSystem.cmake b/cmake-build-debug/CMakeFiles/3.26.4/CMakeSystem.cmake
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/3.26.4/CMakeSystem.cmake	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,15 @@
+set(CMAKE_HOST_SYSTEM "Windows-10.0.22621")
+set(CMAKE_HOST_SYSTEM_NAME "Windows")
+set(CMAKE_HOST_SYSTEM_VERSION "10.0.22621")
+set(CMAKE_HOST_SYSTEM_PROCESSOR "AMD64")
+
+
+
+set(CMAKE_SYSTEM "Windows-10.0.22621")
+set(CMAKE_SYSTEM_NAME "Windows")
+set(CMAKE_SYSTEM_VERSION "10.0.22621")
+set(CMAKE_SYSTEM_PROCESSOR "AMD64")
+
+set(CMAKE_CROSSCOMPILING "FALSE")
+
+set(CMAKE_SYSTEM_LOADED 1)
Index: cmake-build-debug/CMakeFiles/3.26.4/CompilerIdC/CMakeCCompilerId.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdC/CMakeCCompilerId.c b/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdC/CMakeCCompilerId.c
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdC/CMakeCCompilerId.c	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,866 @@
+#ifdef __cplusplus
+# error "A C++ compiler has been selected for C."
+#endif
+
+#if defined(__18CXX)
+# define ID_VOID_MAIN
+#endif
+#if defined(__CLASSIC_C__)
+/* cv-qualifiers did not exist in K&R C */
+# define const
+# define volatile
+#endif
+
+#if !defined(__has_include)
+/* If the compiler does not have __has_include, pretend the answer is
+   always no.  */
+#  define __has_include(x) 0
+#endif
+
+
+/* Version number components: V=Version, R=Revision, P=Patch
+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
+
+#if defined(__INTEL_COMPILER) || defined(__ICC)
+# define COMPILER_ID "Intel"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_ID "GNU"
+# endif
+  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
+     except that a few beta releases use the old format with V=2021.  */
+# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
+#  if defined(__INTEL_COMPILER_UPDATE)
+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
+#  else
+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
+#  endif
+# else
+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
+   /* The third version component from --version is an update index,
+      but no macro is provided for it.  */
+#  define COMPILER_VERSION_PATCH DEC(0)
+# endif
+# if defined(__INTEL_COMPILER_BUILD_DATE)
+   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
+# endif
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+# elif defined(__GNUG__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
+# endif
+# if defined(__GNUC_MINOR__)
+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
+# define COMPILER_ID "IntelLLVM"
+#if defined(_MSC_VER)
+# define SIMULATE_ID "MSVC"
+#endif
+#if defined(__GNUC__)
+# define SIMULATE_ID "GNU"
+#endif
+/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
+ * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
+ * VVVV is no smaller than the current year when a version is released.
+ */
+#if __INTEL_LLVM_COMPILER < 1000000L
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
+#else
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
+#endif
+#if defined(_MSC_VER)
+  /* _MSC_VER = VVRR */
+# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+#endif
+#if defined(__GNUC__)
+# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+#elif defined(__GNUG__)
+# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
+#endif
+#if defined(__GNUC_MINOR__)
+# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+#endif
+#if defined(__GNUC_PATCHLEVEL__)
+# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+#endif
+
+#elif defined(__PATHCC__)
+# define COMPILER_ID "PathScale"
+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
+# if defined(__PATHCC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
+# endif
+
+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
+# define COMPILER_ID "Embarcadero"
+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
+
+#elif defined(__BORLANDC__)
+# define COMPILER_ID "Borland"
+  /* __BORLANDC__ = 0xVRR */
+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
+
+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
+# define COMPILER_ID "Watcom"
+   /* __WATCOMC__ = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__WATCOMC__)
+# define COMPILER_ID "OpenWatcom"
+   /* __WATCOMC__ = VVRP + 1100 */
+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__SUNPRO_C)
+# define COMPILER_ID "SunPro"
+# if __SUNPRO_C >= 0x5100
+   /* __SUNPRO_C = 0xVRRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
+# else
+   /* __SUNPRO_CC = 0xVRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
+# endif
+
+#elif defined(__HP_cc)
+# define COMPILER_ID "HP"
+  /* __HP_cc = VVRRPP */
+# define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)
+# define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)
+
+#elif defined(__DECC)
+# define COMPILER_ID "Compaq"
+  /* __DECC_VER = VVRRTPPPP */
+# define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)
+# define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)
+# define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)
+
+#elif defined(__IBMC__) && defined(__COMPILER_VER__)
+# define COMPILER_ID "zOS"
+  /* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+
+#elif defined(__open_xl__) && defined(__clang__)
+# define COMPILER_ID "IBMClang"
+# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
+# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
+# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
+# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)
+
+
+#elif defined(__ibmxl__) && defined(__clang__)
+# define COMPILER_ID "XLClang"
+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
+
+
+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800
+# define COMPILER_ID "XL"
+  /* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+
+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800
+# define COMPILER_ID "VisualAge"
+  /* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+
+#elif defined(__NVCOMPILER)
+# define COMPILER_ID "NVHPC"
+# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
+# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
+# if defined(__NVCOMPILER_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
+# endif
+
+#elif defined(__PGI)
+# define COMPILER_ID "PGI"
+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
+# if defined(__PGIC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
+# endif
+
+#elif defined(_CRAYC)
+# define COMPILER_ID "Cray"
+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
+
+#elif defined(__TI_COMPILER_VERSION__)
+# define COMPILER_ID "TI"
+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
+
+#elif defined(__CLANG_FUJITSU)
+# define COMPILER_ID "FujitsuClang"
+# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
+# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
+# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
+
+
+#elif defined(__FUJITSU)
+# define COMPILER_ID "Fujitsu"
+# if defined(__FCC_version__)
+#   define COMPILER_VERSION __FCC_version__
+# elif defined(__FCC_major__)
+#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
+#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
+#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
+# endif
+# if defined(__fcc_version)
+#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
+# elif defined(__FCC_VERSION)
+#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
+# endif
+
+
+#elif defined(__ghs__)
+# define COMPILER_ID "GHS"
+/* __GHS_VERSION_NUMBER = VVVVRP */
+# ifdef __GHS_VERSION_NUMBER
+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
+# endif
+
+#elif defined(__TASKING__)
+# define COMPILER_ID "Tasking"
+  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
+  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
+# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
+
+#elif defined(__TINYC__)
+# define COMPILER_ID "TinyCC"
+
+#elif defined(__BCC__)
+# define COMPILER_ID "Bruce"
+
+#elif defined(__SCO_VERSION__)
+# define COMPILER_ID "SCO"
+
+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
+# define COMPILER_ID "ARMCC"
+#if __ARMCC_VERSION >= 1000000
+  /* __ARMCC_VERSION = VRRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
+#else
+  /* __ARMCC_VERSION = VRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
+#endif
+
+
+#elif defined(__clang__) && defined(__apple_build_version__)
+# define COMPILER_ID "AppleClang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
+
+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
+# define COMPILER_ID "ARMClang"
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
+
+#elif defined(__clang__)
+# define COMPILER_ID "Clang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
+# define COMPILER_ID "LCC"
+# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
+# if defined(__LCC_MINOR__)
+#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
+# endif
+# if defined(__GNUC__) && defined(__GNUC_MINOR__)
+#  define SIMULATE_ID "GNU"
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+#  if defined(__GNUC_PATCHLEVEL__)
+#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+#  endif
+# endif
+
+#elif defined(__GNUC__)
+# define COMPILER_ID "GNU"
+# define COMPILER_VERSION_MAJOR DEC(__GNUC__)
+# if defined(__GNUC_MINOR__)
+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif defined(_MSC_VER)
+# define COMPILER_ID "MSVC"
+  /* _MSC_VER = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
+# if defined(_MSC_FULL_VER)
+#  if _MSC_VER >= 1400
+    /* _MSC_FULL_VER = VVRRPPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
+#  else
+    /* _MSC_FULL_VER = VVRRPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
+#  endif
+# endif
+# if defined(_MSC_BUILD)
+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
+# endif
+
+#elif defined(_ADI_COMPILER)
+# define COMPILER_ID "ADSP"
+#if defined(__VERSIONNUM__)
+  /* __VERSIONNUM__ = 0xVVRRPPTT */
+#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
+#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
+#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
+#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
+#endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# define COMPILER_ID "IAR"
+# if defined(__VER__) && defined(__ICCARM__)
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# endif
+
+#elif defined(__SDCC_VERSION_MAJOR) || defined(SDCC)
+# define COMPILER_ID "SDCC"
+# if defined(__SDCC_VERSION_MAJOR)
+#  define COMPILER_VERSION_MAJOR DEC(__SDCC_VERSION_MAJOR)
+#  define COMPILER_VERSION_MINOR DEC(__SDCC_VERSION_MINOR)
+#  define COMPILER_VERSION_PATCH DEC(__SDCC_VERSION_PATCH)
+# else
+  /* SDCC = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(SDCC/100)
+#  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)
+# endif
+
+
+/* These compilers are either not known or too old to define an
+  identification macro.  Try to identify the platform and guess that
+  it is the native compiler.  */
+#elif defined(__hpux) || defined(__hpua)
+# define COMPILER_ID "HP"
+
+#else /* unknown compiler */
+# define COMPILER_ID ""
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
+#ifdef SIMULATE_ID
+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
+#endif
+
+#ifdef __QNXNTO__
+char const* qnxnto = "INFO" ":" "qnxnto[]";
+#endif
+
+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
+#endif
+
+#define STRINGIFY_HELPER(X) #X
+#define STRINGIFY(X) STRINGIFY_HELPER(X)
+
+/* Identify known platforms by name.  */
+#if defined(__linux) || defined(__linux__) || defined(linux)
+# define PLATFORM_ID "Linux"
+
+#elif defined(__MSYS__)
+# define PLATFORM_ID "MSYS"
+
+#elif defined(__CYGWIN__)
+# define PLATFORM_ID "Cygwin"
+
+#elif defined(__MINGW32__)
+# define PLATFORM_ID "MinGW"
+
+#elif defined(__APPLE__)
+# define PLATFORM_ID "Darwin"
+
+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
+# define PLATFORM_ID "Windows"
+
+#elif defined(__FreeBSD__) || defined(__FreeBSD)
+# define PLATFORM_ID "FreeBSD"
+
+#elif defined(__NetBSD__) || defined(__NetBSD)
+# define PLATFORM_ID "NetBSD"
+
+#elif defined(__OpenBSD__) || defined(__OPENBSD)
+# define PLATFORM_ID "OpenBSD"
+
+#elif defined(__sun) || defined(sun)
+# define PLATFORM_ID "SunOS"
+
+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
+# define PLATFORM_ID "AIX"
+
+#elif defined(__hpux) || defined(__hpux__)
+# define PLATFORM_ID "HP-UX"
+
+#elif defined(__HAIKU__)
+# define PLATFORM_ID "Haiku"
+
+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
+# define PLATFORM_ID "BeOS"
+
+#elif defined(__QNX__) || defined(__QNXNTO__)
+# define PLATFORM_ID "QNX"
+
+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
+# define PLATFORM_ID "Tru64"
+
+#elif defined(__riscos) || defined(__riscos__)
+# define PLATFORM_ID "RISCos"
+
+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
+# define PLATFORM_ID "SINIX"
+
+#elif defined(__UNIX_SV__)
+# define PLATFORM_ID "UNIX_SV"
+
+#elif defined(__bsdos__)
+# define PLATFORM_ID "BSDOS"
+
+#elif defined(_MPRAS) || defined(MPRAS)
+# define PLATFORM_ID "MP-RAS"
+
+#elif defined(__osf) || defined(__osf__)
+# define PLATFORM_ID "OSF1"
+
+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
+# define PLATFORM_ID "SCO_SV"
+
+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
+# define PLATFORM_ID "ULTRIX"
+
+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
+# define PLATFORM_ID "Xenix"
+
+#elif defined(__WATCOMC__)
+# if defined(__LINUX__)
+#  define PLATFORM_ID "Linux"
+
+# elif defined(__DOS__)
+#  define PLATFORM_ID "DOS"
+
+# elif defined(__OS2__)
+#  define PLATFORM_ID "OS2"
+
+# elif defined(__WINDOWS__)
+#  define PLATFORM_ID "Windows3x"
+
+# elif defined(__VXWORKS__)
+#  define PLATFORM_ID "VxWorks"
+
+# else /* unknown platform */
+#  define PLATFORM_ID
+# endif
+
+#elif defined(__INTEGRITY)
+# if defined(INT_178B)
+#  define PLATFORM_ID "Integrity178"
+
+# else /* regular Integrity */
+#  define PLATFORM_ID "Integrity"
+# endif
+
+# elif defined(_ADI_COMPILER)
+#  define PLATFORM_ID "ADSP"
+
+#else /* unknown platform */
+# define PLATFORM_ID
+
+#endif
+
+/* For windows compilers MSVC and Intel we can determine
+   the architecture of the compiler being used.  This is because
+   the compilers do not have flags that can change the architecture,
+   but rather depend on which compiler is being used
+*/
+#if defined(_WIN32) && defined(_MSC_VER)
+# if defined(_M_IA64)
+#  define ARCHITECTURE_ID "IA64"
+
+# elif defined(_M_ARM64EC)
+#  define ARCHITECTURE_ID "ARM64EC"
+
+# elif defined(_M_X64) || defined(_M_AMD64)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# elif defined(_M_ARM64)
+#  define ARCHITECTURE_ID "ARM64"
+
+# elif defined(_M_ARM)
+#  if _M_ARM == 4
+#   define ARCHITECTURE_ID "ARMV4I"
+#  elif _M_ARM == 5
+#   define ARCHITECTURE_ID "ARMV5I"
+#  else
+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
+#  endif
+
+# elif defined(_M_MIPS)
+#  define ARCHITECTURE_ID "MIPS"
+
+# elif defined(_M_SH)
+#  define ARCHITECTURE_ID "SHx"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__WATCOMC__)
+# if defined(_M_I86)
+#  define ARCHITECTURE_ID "I86"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# if defined(__ICCARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__ICCRX__)
+#  define ARCHITECTURE_ID "RX"
+
+# elif defined(__ICCRH850__)
+#  define ARCHITECTURE_ID "RH850"
+
+# elif defined(__ICCRL78__)
+#  define ARCHITECTURE_ID "RL78"
+
+# elif defined(__ICCRISCV__)
+#  define ARCHITECTURE_ID "RISCV"
+
+# elif defined(__ICCAVR__)
+#  define ARCHITECTURE_ID "AVR"
+
+# elif defined(__ICC430__)
+#  define ARCHITECTURE_ID "MSP430"
+
+# elif defined(__ICCV850__)
+#  define ARCHITECTURE_ID "V850"
+
+# elif defined(__ICC8051__)
+#  define ARCHITECTURE_ID "8051"
+
+# elif defined(__ICCSTM8__)
+#  define ARCHITECTURE_ID "STM8"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__ghs__)
+# if defined(__PPC64__)
+#  define ARCHITECTURE_ID "PPC64"
+
+# elif defined(__ppc__)
+#  define ARCHITECTURE_ID "PPC"
+
+# elif defined(__ARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__x86_64__)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(__i386__)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__TI_COMPILER_VERSION__)
+# if defined(__TI_ARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__MSP430__)
+#  define ARCHITECTURE_ID "MSP430"
+
+# elif defined(__TMS320C28XX__)
+#  define ARCHITECTURE_ID "TMS320C28x"
+
+# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
+#  define ARCHITECTURE_ID "TMS320C6x"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+# elif defined(__ADSPSHARC__)
+#  define ARCHITECTURE_ID "SHARC"
+
+# elif defined(__ADSPBLACKFIN__)
+#  define ARCHITECTURE_ID "Blackfin"
+
+#elif defined(__TASKING__)
+
+# if defined(__CTC__) || defined(__CPTC__)
+#  define ARCHITECTURE_ID "TriCore"
+
+# elif defined(__CMCS__)
+#  define ARCHITECTURE_ID "MCS"
+
+# elif defined(__CARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__CARC__)
+#  define ARCHITECTURE_ID "ARC"
+
+# elif defined(__C51__)
+#  define ARCHITECTURE_ID "8051"
+
+# elif defined(__CPCP__)
+#  define ARCHITECTURE_ID "PCP"
+
+# else
+#  define ARCHITECTURE_ID ""
+# endif
+
+#else
+#  define ARCHITECTURE_ID
+#endif
+
+/* Convert integer to decimal digit literals.  */
+#define DEC(n)                   \
+  ('0' + (((n) / 10000000)%10)), \
+  ('0' + (((n) / 1000000)%10)),  \
+  ('0' + (((n) / 100000)%10)),   \
+  ('0' + (((n) / 10000)%10)),    \
+  ('0' + (((n) / 1000)%10)),     \
+  ('0' + (((n) / 100)%10)),      \
+  ('0' + (((n) / 10)%10)),       \
+  ('0' +  ((n) % 10))
+
+/* Convert integer to hex digit literals.  */
+#define HEX(n)             \
+  ('0' + ((n)>>28 & 0xF)), \
+  ('0' + ((n)>>24 & 0xF)), \
+  ('0' + ((n)>>20 & 0xF)), \
+  ('0' + ((n)>>16 & 0xF)), \
+  ('0' + ((n)>>12 & 0xF)), \
+  ('0' + ((n)>>8  & 0xF)), \
+  ('0' + ((n)>>4  & 0xF)), \
+  ('0' + ((n)     & 0xF))
+
+/* Construct a string literal encoding the version number. */
+#ifdef COMPILER_VERSION
+char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
+
+/* Construct a string literal encoding the version number components. */
+#elif defined(COMPILER_VERSION_MAJOR)
+char const info_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
+  COMPILER_VERSION_MAJOR,
+# ifdef COMPILER_VERSION_MINOR
+  '.', COMPILER_VERSION_MINOR,
+#  ifdef COMPILER_VERSION_PATCH
+   '.', COMPILER_VERSION_PATCH,
+#   ifdef COMPILER_VERSION_TWEAK
+    '.', COMPILER_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct a string literal encoding the internal version number. */
+#ifdef COMPILER_VERSION_INTERNAL
+char const info_version_internal[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
+  'i','n','t','e','r','n','a','l','[',
+  COMPILER_VERSION_INTERNAL,']','\0'};
+#elif defined(COMPILER_VERSION_INTERNAL_STR)
+char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
+#endif
+
+/* Construct a string literal encoding the version number components. */
+#ifdef SIMULATE_VERSION_MAJOR
+char const info_simulate_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
+  SIMULATE_VERSION_MAJOR,
+# ifdef SIMULATE_VERSION_MINOR
+  '.', SIMULATE_VERSION_MINOR,
+#  ifdef SIMULATE_VERSION_PATCH
+   '.', SIMULATE_VERSION_PATCH,
+#   ifdef SIMULATE_VERSION_TWEAK
+    '.', SIMULATE_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
+
+
+
+#if !defined(__STDC__) && !defined(__clang__)
+# if defined(_MSC_VER) || defined(__ibmxl__) || defined(__IBMC__)
+#  define C_VERSION "90"
+# else
+#  define C_VERSION
+# endif
+#elif __STDC_VERSION__ > 201710L
+# define C_VERSION "23"
+#elif __STDC_VERSION__ >= 201710L
+# define C_VERSION "17"
+#elif __STDC_VERSION__ >= 201000L
+# define C_VERSION "11"
+#elif __STDC_VERSION__ >= 199901L
+# define C_VERSION "99"
+#else
+# define C_VERSION "90"
+#endif
+const char* info_language_standard_default =
+  "INFO" ":" "standard_default[" C_VERSION "]";
+
+const char* info_language_extensions_default = "INFO" ":" "extensions_default["
+#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
+     defined(__TI_COMPILER_VERSION__)) &&                                     \
+  !defined(__STRICT_ANSI__)
+  "ON"
+#else
+  "OFF"
+#endif
+"]";
+
+/*--------------------------------------------------------------------------*/
+
+#ifdef ID_VOID_MAIN
+void main() {}
+#else
+# if defined(__CLASSIC_C__)
+int main(argc, argv) int argc; char *argv[];
+# else
+int main(int argc, char* argv[])
+# endif
+{
+  int require = 0;
+  require += info_compiler[argc];
+  require += info_platform[argc];
+  require += info_arch[argc];
+#ifdef COMPILER_VERSION_MAJOR
+  require += info_version[argc];
+#endif
+#ifdef COMPILER_VERSION_INTERNAL
+  require += info_version_internal[argc];
+#endif
+#ifdef SIMULATE_ID
+  require += info_simulate[argc];
+#endif
+#ifdef SIMULATE_VERSION_MAJOR
+  require += info_simulate_version[argc];
+#endif
+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
+  require += info_cray[argc];
+#endif
+  require += info_language_standard_default[argc];
+  require += info_language_extensions_default[argc];
+  (void)argv;
+  return require;
+}
+#endif
Index: cmake-build-debug/CMakeFiles/3.26.4/CompilerIdCXX/CMakeCXXCompilerId.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdCXX/CMakeCXXCompilerId.cpp b/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdCXX/CMakeCXXCompilerId.cpp
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,855 @@
+/* This source file must have a .cpp extension so that all C++ compilers
+   recognize the extension without flags.  Borland does not know .cxx for
+   example.  */
+#ifndef __cplusplus
+# error "A C compiler has been selected for C++."
+#endif
+
+#if !defined(__has_include)
+/* If the compiler does not have __has_include, pretend the answer is
+   always no.  */
+#  define __has_include(x) 0
+#endif
+
+
+/* Version number components: V=Version, R=Revision, P=Patch
+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
+
+#if defined(__COMO__)
+# define COMPILER_ID "Comeau"
+  /* __COMO_VERSION__ = VRR */
+# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)
+
+#elif defined(__INTEL_COMPILER) || defined(__ICC)
+# define COMPILER_ID "Intel"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_ID "GNU"
+# endif
+  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
+     except that a few beta releases use the old format with V=2021.  */
+# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
+#  if defined(__INTEL_COMPILER_UPDATE)
+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
+#  else
+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
+#  endif
+# else
+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
+   /* The third version component from --version is an update index,
+      but no macro is provided for it.  */
+#  define COMPILER_VERSION_PATCH DEC(0)
+# endif
+# if defined(__INTEL_COMPILER_BUILD_DATE)
+   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
+# endif
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+# elif defined(__GNUG__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
+# endif
+# if defined(__GNUC_MINOR__)
+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
+# define COMPILER_ID "IntelLLVM"
+#if defined(_MSC_VER)
+# define SIMULATE_ID "MSVC"
+#endif
+#if defined(__GNUC__)
+# define SIMULATE_ID "GNU"
+#endif
+/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
+ * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
+ * VVVV is no smaller than the current year when a version is released.
+ */
+#if __INTEL_LLVM_COMPILER < 1000000L
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
+#else
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
+#endif
+#if defined(_MSC_VER)
+  /* _MSC_VER = VVRR */
+# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+#endif
+#if defined(__GNUC__)
+# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+#elif defined(__GNUG__)
+# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
+#endif
+#if defined(__GNUC_MINOR__)
+# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+#endif
+#if defined(__GNUC_PATCHLEVEL__)
+# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+#endif
+
+#elif defined(__PATHCC__)
+# define COMPILER_ID "PathScale"
+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
+# if defined(__PATHCC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
+# endif
+
+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
+# define COMPILER_ID "Embarcadero"
+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
+
+#elif defined(__BORLANDC__)
+# define COMPILER_ID "Borland"
+  /* __BORLANDC__ = 0xVRR */
+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
+
+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
+# define COMPILER_ID "Watcom"
+   /* __WATCOMC__ = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__WATCOMC__)
+# define COMPILER_ID "OpenWatcom"
+   /* __WATCOMC__ = VVRP + 1100 */
+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__SUNPRO_CC)
+# define COMPILER_ID "SunPro"
+# if __SUNPRO_CC >= 0x5100
+   /* __SUNPRO_CC = 0xVRRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+# else
+   /* __SUNPRO_CC = 0xVRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+# endif
+
+#elif defined(__HP_aCC)
+# define COMPILER_ID "HP"
+  /* __HP_aCC = VVRRPP */
+# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
+# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
+
+#elif defined(__DECCXX)
+# define COMPILER_ID "Compaq"
+  /* __DECCXX_VER = VVRRTPPPP */
+# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
+# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
+# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
+
+#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
+# define COMPILER_ID "zOS"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__open_xl__) && defined(__clang__)
+# define COMPILER_ID "IBMClang"
+# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
+# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
+# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
+# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)
+
+
+#elif defined(__ibmxl__) && defined(__clang__)
+# define COMPILER_ID "XLClang"
+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
+
+
+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
+# define COMPILER_ID "XL"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
+# define COMPILER_ID "VisualAge"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__NVCOMPILER)
+# define COMPILER_ID "NVHPC"
+# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
+# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
+# if defined(__NVCOMPILER_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
+# endif
+
+#elif defined(__PGI)
+# define COMPILER_ID "PGI"
+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
+# if defined(__PGIC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
+# endif
+
+#elif defined(_CRAYC)
+# define COMPILER_ID "Cray"
+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
+
+#elif defined(__TI_COMPILER_VERSION__)
+# define COMPILER_ID "TI"
+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
+
+#elif defined(__CLANG_FUJITSU)
+# define COMPILER_ID "FujitsuClang"
+# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
+# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
+# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
+
+
+#elif defined(__FUJITSU)
+# define COMPILER_ID "Fujitsu"
+# if defined(__FCC_version__)
+#   define COMPILER_VERSION __FCC_version__
+# elif defined(__FCC_major__)
+#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
+#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
+#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
+# endif
+# if defined(__fcc_version)
+#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
+# elif defined(__FCC_VERSION)
+#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
+# endif
+
+
+#elif defined(__ghs__)
+# define COMPILER_ID "GHS"
+/* __GHS_VERSION_NUMBER = VVVVRP */
+# ifdef __GHS_VERSION_NUMBER
+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
+# endif
+
+#elif defined(__TASKING__)
+# define COMPILER_ID "Tasking"
+  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
+  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
+# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
+
+#elif defined(__SCO_VERSION__)
+# define COMPILER_ID "SCO"
+
+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
+# define COMPILER_ID "ARMCC"
+#if __ARMCC_VERSION >= 1000000
+  /* __ARMCC_VERSION = VRRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
+#else
+  /* __ARMCC_VERSION = VRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
+#endif
+
+
+#elif defined(__clang__) && defined(__apple_build_version__)
+# define COMPILER_ID "AppleClang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
+
+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
+# define COMPILER_ID "ARMClang"
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
+
+#elif defined(__clang__)
+# define COMPILER_ID "Clang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
+# define COMPILER_ID "LCC"
+# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
+# if defined(__LCC_MINOR__)
+#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
+# endif
+# if defined(__GNUC__) && defined(__GNUC_MINOR__)
+#  define SIMULATE_ID "GNU"
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+#  if defined(__GNUC_PATCHLEVEL__)
+#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+#  endif
+# endif
+
+#elif defined(__GNUC__) || defined(__GNUG__)
+# define COMPILER_ID "GNU"
+# if defined(__GNUC__)
+#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
+# else
+#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
+# endif
+# if defined(__GNUC_MINOR__)
+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif defined(_MSC_VER)
+# define COMPILER_ID "MSVC"
+  /* _MSC_VER = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
+# if defined(_MSC_FULL_VER)
+#  if _MSC_VER >= 1400
+    /* _MSC_FULL_VER = VVRRPPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
+#  else
+    /* _MSC_FULL_VER = VVRRPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
+#  endif
+# endif
+# if defined(_MSC_BUILD)
+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
+# endif
+
+#elif defined(_ADI_COMPILER)
+# define COMPILER_ID "ADSP"
+#if defined(__VERSIONNUM__)
+  /* __VERSIONNUM__ = 0xVVRRPPTT */
+#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
+#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
+#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
+#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
+#endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# define COMPILER_ID "IAR"
+# if defined(__VER__) && defined(__ICCARM__)
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# endif
+
+
+/* These compilers are either not known or too old to define an
+  identification macro.  Try to identify the platform and guess that
+  it is the native compiler.  */
+#elif defined(__hpux) || defined(__hpua)
+# define COMPILER_ID "HP"
+
+#else /* unknown compiler */
+# define COMPILER_ID ""
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
+#ifdef SIMULATE_ID
+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
+#endif
+
+#ifdef __QNXNTO__
+char const* qnxnto = "INFO" ":" "qnxnto[]";
+#endif
+
+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
+#endif
+
+#define STRINGIFY_HELPER(X) #X
+#define STRINGIFY(X) STRINGIFY_HELPER(X)
+
+/* Identify known platforms by name.  */
+#if defined(__linux) || defined(__linux__) || defined(linux)
+# define PLATFORM_ID "Linux"
+
+#elif defined(__MSYS__)
+# define PLATFORM_ID "MSYS"
+
+#elif defined(__CYGWIN__)
+# define PLATFORM_ID "Cygwin"
+
+#elif defined(__MINGW32__)
+# define PLATFORM_ID "MinGW"
+
+#elif defined(__APPLE__)
+# define PLATFORM_ID "Darwin"
+
+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
+# define PLATFORM_ID "Windows"
+
+#elif defined(__FreeBSD__) || defined(__FreeBSD)
+# define PLATFORM_ID "FreeBSD"
+
+#elif defined(__NetBSD__) || defined(__NetBSD)
+# define PLATFORM_ID "NetBSD"
+
+#elif defined(__OpenBSD__) || defined(__OPENBSD)
+# define PLATFORM_ID "OpenBSD"
+
+#elif defined(__sun) || defined(sun)
+# define PLATFORM_ID "SunOS"
+
+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
+# define PLATFORM_ID "AIX"
+
+#elif defined(__hpux) || defined(__hpux__)
+# define PLATFORM_ID "HP-UX"
+
+#elif defined(__HAIKU__)
+# define PLATFORM_ID "Haiku"
+
+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
+# define PLATFORM_ID "BeOS"
+
+#elif defined(__QNX__) || defined(__QNXNTO__)
+# define PLATFORM_ID "QNX"
+
+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
+# define PLATFORM_ID "Tru64"
+
+#elif defined(__riscos) || defined(__riscos__)
+# define PLATFORM_ID "RISCos"
+
+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
+# define PLATFORM_ID "SINIX"
+
+#elif defined(__UNIX_SV__)
+# define PLATFORM_ID "UNIX_SV"
+
+#elif defined(__bsdos__)
+# define PLATFORM_ID "BSDOS"
+
+#elif defined(_MPRAS) || defined(MPRAS)
+# define PLATFORM_ID "MP-RAS"
+
+#elif defined(__osf) || defined(__osf__)
+# define PLATFORM_ID "OSF1"
+
+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
+# define PLATFORM_ID "SCO_SV"
+
+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
+# define PLATFORM_ID "ULTRIX"
+
+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
+# define PLATFORM_ID "Xenix"
+
+#elif defined(__WATCOMC__)
+# if defined(__LINUX__)
+#  define PLATFORM_ID "Linux"
+
+# elif defined(__DOS__)
+#  define PLATFORM_ID "DOS"
+
+# elif defined(__OS2__)
+#  define PLATFORM_ID "OS2"
+
+# elif defined(__WINDOWS__)
+#  define PLATFORM_ID "Windows3x"
+
+# elif defined(__VXWORKS__)
+#  define PLATFORM_ID "VxWorks"
+
+# else /* unknown platform */
+#  define PLATFORM_ID
+# endif
+
+#elif defined(__INTEGRITY)
+# if defined(INT_178B)
+#  define PLATFORM_ID "Integrity178"
+
+# else /* regular Integrity */
+#  define PLATFORM_ID "Integrity"
+# endif
+
+# elif defined(_ADI_COMPILER)
+#  define PLATFORM_ID "ADSP"
+
+#else /* unknown platform */
+# define PLATFORM_ID
+
+#endif
+
+/* For windows compilers MSVC and Intel we can determine
+   the architecture of the compiler being used.  This is because
+   the compilers do not have flags that can change the architecture,
+   but rather depend on which compiler is being used
+*/
+#if defined(_WIN32) && defined(_MSC_VER)
+# if defined(_M_IA64)
+#  define ARCHITECTURE_ID "IA64"
+
+# elif defined(_M_ARM64EC)
+#  define ARCHITECTURE_ID "ARM64EC"
+
+# elif defined(_M_X64) || defined(_M_AMD64)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# elif defined(_M_ARM64)
+#  define ARCHITECTURE_ID "ARM64"
+
+# elif defined(_M_ARM)
+#  if _M_ARM == 4
+#   define ARCHITECTURE_ID "ARMV4I"
+#  elif _M_ARM == 5
+#   define ARCHITECTURE_ID "ARMV5I"
+#  else
+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
+#  endif
+
+# elif defined(_M_MIPS)
+#  define ARCHITECTURE_ID "MIPS"
+
+# elif defined(_M_SH)
+#  define ARCHITECTURE_ID "SHx"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__WATCOMC__)
+# if defined(_M_I86)
+#  define ARCHITECTURE_ID "I86"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# if defined(__ICCARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__ICCRX__)
+#  define ARCHITECTURE_ID "RX"
+
+# elif defined(__ICCRH850__)
+#  define ARCHITECTURE_ID "RH850"
+
+# elif defined(__ICCRL78__)
+#  define ARCHITECTURE_ID "RL78"
+
+# elif defined(__ICCRISCV__)
+#  define ARCHITECTURE_ID "RISCV"
+
+# elif defined(__ICCAVR__)
+#  define ARCHITECTURE_ID "AVR"
+
+# elif defined(__ICC430__)
+#  define ARCHITECTURE_ID "MSP430"
+
+# elif defined(__ICCV850__)
+#  define ARCHITECTURE_ID "V850"
+
+# elif defined(__ICC8051__)
+#  define ARCHITECTURE_ID "8051"
+
+# elif defined(__ICCSTM8__)
+#  define ARCHITECTURE_ID "STM8"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__ghs__)
+# if defined(__PPC64__)
+#  define ARCHITECTURE_ID "PPC64"
+
+# elif defined(__ppc__)
+#  define ARCHITECTURE_ID "PPC"
+
+# elif defined(__ARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__x86_64__)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(__i386__)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__TI_COMPILER_VERSION__)
+# if defined(__TI_ARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__MSP430__)
+#  define ARCHITECTURE_ID "MSP430"
+
+# elif defined(__TMS320C28XX__)
+#  define ARCHITECTURE_ID "TMS320C28x"
+
+# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
+#  define ARCHITECTURE_ID "TMS320C6x"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+# elif defined(__ADSPSHARC__)
+#  define ARCHITECTURE_ID "SHARC"
+
+# elif defined(__ADSPBLACKFIN__)
+#  define ARCHITECTURE_ID "Blackfin"
+
+#elif defined(__TASKING__)
+
+# if defined(__CTC__) || defined(__CPTC__)
+#  define ARCHITECTURE_ID "TriCore"
+
+# elif defined(__CMCS__)
+#  define ARCHITECTURE_ID "MCS"
+
+# elif defined(__CARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__CARC__)
+#  define ARCHITECTURE_ID "ARC"
+
+# elif defined(__C51__)
+#  define ARCHITECTURE_ID "8051"
+
+# elif defined(__CPCP__)
+#  define ARCHITECTURE_ID "PCP"
+
+# else
+#  define ARCHITECTURE_ID ""
+# endif
+
+#else
+#  define ARCHITECTURE_ID
+#endif
+
+/* Convert integer to decimal digit literals.  */
+#define DEC(n)                   \
+  ('0' + (((n) / 10000000)%10)), \
+  ('0' + (((n) / 1000000)%10)),  \
+  ('0' + (((n) / 100000)%10)),   \
+  ('0' + (((n) / 10000)%10)),    \
+  ('0' + (((n) / 1000)%10)),     \
+  ('0' + (((n) / 100)%10)),      \
+  ('0' + (((n) / 10)%10)),       \
+  ('0' +  ((n) % 10))
+
+/* Convert integer to hex digit literals.  */
+#define HEX(n)             \
+  ('0' + ((n)>>28 & 0xF)), \
+  ('0' + ((n)>>24 & 0xF)), \
+  ('0' + ((n)>>20 & 0xF)), \
+  ('0' + ((n)>>16 & 0xF)), \
+  ('0' + ((n)>>12 & 0xF)), \
+  ('0' + ((n)>>8  & 0xF)), \
+  ('0' + ((n)>>4  & 0xF)), \
+  ('0' + ((n)     & 0xF))
+
+/* Construct a string literal encoding the version number. */
+#ifdef COMPILER_VERSION
+char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
+
+/* Construct a string literal encoding the version number components. */
+#elif defined(COMPILER_VERSION_MAJOR)
+char const info_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
+  COMPILER_VERSION_MAJOR,
+# ifdef COMPILER_VERSION_MINOR
+  '.', COMPILER_VERSION_MINOR,
+#  ifdef COMPILER_VERSION_PATCH
+   '.', COMPILER_VERSION_PATCH,
+#   ifdef COMPILER_VERSION_TWEAK
+    '.', COMPILER_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct a string literal encoding the internal version number. */
+#ifdef COMPILER_VERSION_INTERNAL
+char const info_version_internal[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
+  'i','n','t','e','r','n','a','l','[',
+  COMPILER_VERSION_INTERNAL,']','\0'};
+#elif defined(COMPILER_VERSION_INTERNAL_STR)
+char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
+#endif
+
+/* Construct a string literal encoding the version number components. */
+#ifdef SIMULATE_VERSION_MAJOR
+char const info_simulate_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
+  SIMULATE_VERSION_MAJOR,
+# ifdef SIMULATE_VERSION_MINOR
+  '.', SIMULATE_VERSION_MINOR,
+#  ifdef SIMULATE_VERSION_PATCH
+   '.', SIMULATE_VERSION_PATCH,
+#   ifdef SIMULATE_VERSION_TWEAK
+    '.', SIMULATE_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
+
+
+
+#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
+#  if defined(__INTEL_CXX11_MODE__)
+#    if defined(__cpp_aggregate_nsdmi)
+#      define CXX_STD 201402L
+#    else
+#      define CXX_STD 201103L
+#    endif
+#  else
+#    define CXX_STD 199711L
+#  endif
+#elif defined(_MSC_VER) && defined(_MSVC_LANG)
+#  define CXX_STD _MSVC_LANG
+#else
+#  define CXX_STD __cplusplus
+#endif
+
+const char* info_language_standard_default = "INFO" ":" "standard_default["
+#if CXX_STD > 202002L
+  "23"
+#elif CXX_STD > 201703L
+  "20"
+#elif CXX_STD >= 201703L
+  "17"
+#elif CXX_STD >= 201402L
+  "14"
+#elif CXX_STD >= 201103L
+  "11"
+#else
+  "98"
+#endif
+"]";
+
+const char* info_language_extensions_default = "INFO" ":" "extensions_default["
+#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
+     defined(__TI_COMPILER_VERSION__)) &&                                     \
+  !defined(__STRICT_ANSI__)
+  "ON"
+#else
+  "OFF"
+#endif
+"]";
+
+/*--------------------------------------------------------------------------*/
+
+int main(int argc, char* argv[])
+{
+  int require = 0;
+  require += info_compiler[argc];
+  require += info_platform[argc];
+  require += info_arch[argc];
+#ifdef COMPILER_VERSION_MAJOR
+  require += info_version[argc];
+#endif
+#ifdef COMPILER_VERSION_INTERNAL
+  require += info_version_internal[argc];
+#endif
+#ifdef SIMULATE_ID
+  require += info_simulate[argc];
+#endif
+#ifdef SIMULATE_VERSION_MAJOR
+  require += info_simulate_version[argc];
+#endif
+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
+  require += info_cray[argc];
+#endif
+  require += info_language_standard_default[argc];
+  require += info_language_extensions_default[argc];
+  (void)argv;
+  return require;
+}
Index: cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml b/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,413 @@
+
+---
+events:
+  -
+    kind: "message-v1"
+    backtrace:
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineSystem.cmake:204 (message)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      The system is: Windows - 10.0.22621 - AMD64
+  -
+    kind: "message-v1"
+    backtrace:
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
+      Compiler: C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/gcc.exe 
+      Build flags: 
+      Id flags:  
+      
+      The output was:
+      0
+      
+      
+      Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.exe"
+      
+      The C compiler identification is GNU, found in:
+        C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdC/a.exe
+      
+  -
+    kind: "message-v1"
+    backtrace:
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
+      Compiler: C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/g++.exe 
+      Build flags: 
+      Id flags:  
+      
+      The output was:
+      0
+      
+      
+      Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.exe"
+      
+      The CXX compiler identification is GNU, found in:
+        C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdCXX/a.exe
+      
+  -
+    kind: "try_compile-v1"
+    backtrace:
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCompilerABI.cmake:57 (try_compile)"
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    checks:
+      - "Detecting C compiler ABI info"
+    directories:
+      source: "C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-6m3voj"
+      binary: "C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-6m3voj"
+    cmakeVariables:
+      CMAKE_C_FLAGS: ""
+      CMAKE_C_FLAGS_DEBUG: "-g"
+      CMAKE_EXE_LINKER_FLAGS: ""
+    buildResult:
+      variable: "CMAKE_C_ABI_COMPILED"
+      cached: true
+      stdout: |
+        Change Dir: C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-6m3voj
+        
+        Run Build Command(s):C:/Program Files/JetBrains/CLion 2023.2.2/bin/ninja/win/x64/ninja.exe -v cmTC_af1ed && [1/2] C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\gcc.exe   -fdiagnostics-color=always   -v -o CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj -c "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCCompilerABI.c"
+        Using built-in specs.
+        COLLECT_GCC=C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\gcc.exe
+        Target: x86_64-w64-mingw32
+        Configured with: ../gcc-13.1.0/configure --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --build=x86_64-alpine-linux-musl --prefix=/win --enable-checking=release --enable-fully-dynamic-string --enable-languages=c,c++ --with-arch=nocona --with-tune=generic --enable-libatomic --enable-libgomp --enable-libstdcxx-filesystem-ts --enable-libstdcxx-time --enable-seh-exceptions --enable-shared --enable-static --enable-threads=posix --enable-version-specific-runtime-libs --disable-bootstrap --disable-graphite --disable-libada --disable-libstdcxx-pch --disable-libstdcxx-debug --disable-libquadmath --disable-lto --disable-nls --disable-multilib --disable-rpath --disable-symvers --disable-werror --disable-win32-registry --with-gnu-as --with-gnu-ld --with-system-libiconv --with-system-libz --with-gmp=/win/makedepends --with-mpfr=/win/makedepends --with-mpc=/win/makedepends
+        Thread model: posix
+        Supported LTO compression algorithms: zlib
+        gcc version 13.1.0 (GCC) 
+        COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_af1ed.dir/'
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/cc1.exe -quiet -v -iprefix C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/ -D_REENTRANT C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCCompilerABI.c -quiet -dumpdir CMakeFiles/cmTC_af1ed.dir/ -dumpbase CMakeCCompilerABI.c.c -dumpbase-ext .c -mtune=generic -march=nocona -version -fdiagnostics-color=always -o C:\\Users\\james\\AppData\\Local\\Temp\\ccMGoe7f.s
+        GNU C17 (GCC) version 13.1.0 (x86_64-w64-mingw32)
+        	compiled by GNU C version 13.1.0, GMP version 6.2.1, MPFR version 4.2.0-p4, MPC version 1.3.1, isl version none
+        GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
+        ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include"
+        ignoring nonexistent directory "/win/include"
+        ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../include"
+        ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed"
+        ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include"
+        ignoring nonexistent directory "/mingw/include"
+        #include "..." search starts here:
+        #include <...> search starts here:
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../include
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include
+        End of search list.
+        Compiler executable checksum: 2aa4fcf5c9208168c5e2d38a58fc2a97
+        COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_af1ed.dir/'
+         as -v -o CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj C:\\Users\\james\\AppData\\Local\\Temp\\ccMGoe7f.s
+        GNU assembler version 2.40 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.40
+        COMPILER_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/
+        LIBRARY_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../
+        COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.'
+        [2/2] cmd.exe /C "cd . && C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\gcc.exe  -v CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj -o cmTC_af1ed.exe -Wl,--out-implib,libcmTC_af1ed.dll.a -Wl,--major-image-version,0,--minor-image-version,0   && cd ."
+        Using built-in specs.
+        COLLECT_GCC=C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\gcc.exe
+        COLLECT_LTO_WRAPPER=C:/Program\\ Files/JetBrains/CLion\\ 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/lto-wrapper.exe
+        Target: x86_64-w64-mingw32
+        Configured with: ../gcc-13.1.0/configure --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --build=x86_64-alpine-linux-musl --prefix=/win --enable-checking=release --enable-fully-dynamic-string --enable-languages=c,c++ --with-arch=nocona --with-tune=generic --enable-libatomic --enable-libgomp --enable-libstdcxx-filesystem-ts --enable-libstdcxx-time --enable-seh-exceptions --enable-shared --enable-static --enable-threads=posix --enable-version-specific-runtime-libs --disable-bootstrap --disable-graphite --disable-libada --disable-libstdcxx-pch --disable-libstdcxx-debug --disable-libquadmath --disable-lto --disable-nls --disable-multilib --disable-rpath --disable-symvers --disable-werror --disable-win32-registry --with-gnu-as --with-gnu-ld --with-system-libiconv --with-system-libz --with-gmp=/win/makedepends --with-mpfr=/win/makedepends --with-mpc=/win/makedepends
+        Thread model: posix
+        Supported LTO compression algorithms: zlib
+        gcc version 13.1.0 (GCC) 
+        COMPILER_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/
+        LIBRARY_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../
+        COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_af1ed.exe' '-mtune=generic' '-march=nocona' '-dumpdir' 'cmTC_af1ed.'
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/collect2.exe -m i386pep -Bdynamic -o cmTC_af1ed.exe C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0 -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../.. CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj --out-implib libcmTC_af1ed.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lgcc_eh -lmoldname -lmingwex -lmsvcrt -lkernel32 -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -liconv -lmingw32 -lgcc -lgcc_eh -lmoldname -lmingwex -lmsvcrt -lkernel32 C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o
+        COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_af1ed.exe' '-mtune=generic' '-march=nocona' '-dumpdir' 'cmTC_af1ed.'
+        
+      exitCode: 0
+  -
+    kind: "message-v1"
+    backtrace:
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCompilerABI.cmake:127 (message)"
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Parsed C implicit include dir info: rv=done
+        found start of include info
+        found start of implicit include info
+          add: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include]
+          add: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../include]
+          add: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed]
+          add: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include]
+        end of search list found
+        collapse include dir [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include] ==> [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include]
+        collapse include dir [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../include] ==> [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/include]
+        collapse include dir [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed] ==> [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed]
+        collapse include dir [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include] ==> [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/x86_64-w64-mingw32/include]
+        implicit include dirs: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/include;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/x86_64-w64-mingw32/include]
+      
+      
+  -
+    kind: "message-v1"
+    backtrace:
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCompilerABI.cmake:152 (message)"
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Parsed C implicit link information:
+        link line regex: [^( *|.*[/\\])(ld\\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
+        ignore line: [Change Dir: C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-6m3voj]
+        ignore line: []
+        ignore line: [Run Build Command(s):C:/Program Files/JetBrains/CLion 2023.2.2/bin/ninja/win/x64/ninja.exe -v cmTC_af1ed && [1/2] C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\gcc.exe   -fdiagnostics-color=always   -v -o CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj -c "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCCompilerABI.c"]
+        ignore line: [Using built-in specs.]
+        ignore line: [COLLECT_GCC=C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\gcc.exe]
+        ignore line: [Target: x86_64-w64-mingw32]
+        ignore line: [Configured with: ../gcc-13.1.0/configure --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --build=x86_64-alpine-linux-musl --prefix=/win --enable-checking=release --enable-fully-dynamic-string --enable-languages=c,c++ --with-arch=nocona --with-tune=generic --enable-libatomic --enable-libgomp --enable-libstdcxx-filesystem-ts --enable-libstdcxx-time --enable-seh-exceptions --enable-shared --enable-static --enable-threads=posix --enable-version-specific-runtime-libs --disable-bootstrap --disable-graphite --disable-libada --disable-libstdcxx-pch --disable-libstdcxx-debug --disable-libquadmath --disable-lto --disable-nls --disable-multilib --disable-rpath --disable-symvers --disable-werror --disable-win32-registry --with-gnu-as --with-gnu-ld --with-system-libiconv --with-system-libz --with-gmp=/win/makedepends --with-mpfr=/win/makedepends --with-mpc=/win/makedepends]
+        ignore line: [Thread model: posix]
+        ignore line: [Supported LTO compression algorithms: zlib]
+        ignore line: [gcc version 13.1.0 (GCC) ]
+        ignore line: [COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_af1ed.dir/']
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/cc1.exe -quiet -v -iprefix C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/ -D_REENTRANT C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCCompilerABI.c -quiet -dumpdir CMakeFiles/cmTC_af1ed.dir/ -dumpbase CMakeCCompilerABI.c.c -dumpbase-ext .c -mtune=generic -march=nocona -version -fdiagnostics-color=always -o C:\\Users\\james\\AppData\\Local\\Temp\\ccMGoe7f.s]
+        ignore line: [GNU C17 (GCC) version 13.1.0 (x86_64-w64-mingw32)]
+        ignore line: [	compiled by GNU C version 13.1.0  GMP version 6.2.1  MPFR version 4.2.0-p4  MPC version 1.3.1  isl version none]
+        ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
+        ignore line: [ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include"]
+        ignore line: [ignoring nonexistent directory "/win/include"]
+        ignore line: [ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../include"]
+        ignore line: [ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed"]
+        ignore line: [ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include"]
+        ignore line: [ignoring nonexistent directory "/mingw/include"]
+        ignore line: [#include "..." search starts here:]
+        ignore line: [#include <...> search starts here:]
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include]
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../include]
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed]
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include]
+        ignore line: [End of search list.]
+        ignore line: [Compiler executable checksum: 2aa4fcf5c9208168c5e2d38a58fc2a97]
+        ignore line: [COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_af1ed.dir/']
+        ignore line: [ as -v -o CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj C:\\Users\\james\\AppData\\Local\\Temp\\ccMGoe7f.s]
+        ignore line: [GNU assembler version 2.40 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.40]
+        ignore line: [COMPILER_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/]
+        ignore line: [LIBRARY_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../]
+        ignore line: [COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.']
+        ignore line: [[2/2] cmd.exe /C "cd . && C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\gcc.exe  -v CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj -o cmTC_af1ed.exe -Wl --out-implib libcmTC_af1ed.dll.a -Wl --major-image-version 0 --minor-image-version 0   && cd ."]
+        ignore line: [Using built-in specs.]
+        ignore line: [COLLECT_GCC=C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\gcc.exe]
+        ignore line: [COLLECT_LTO_WRAPPER=C:/Program\\ Files/JetBrains/CLion\\ 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/lto-wrapper.exe]
+        ignore line: [Target: x86_64-w64-mingw32]
+        ignore line: [Configured with: ../gcc-13.1.0/configure --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --build=x86_64-alpine-linux-musl --prefix=/win --enable-checking=release --enable-fully-dynamic-string --enable-languages=c,c++ --with-arch=nocona --with-tune=generic --enable-libatomic --enable-libgomp --enable-libstdcxx-filesystem-ts --enable-libstdcxx-time --enable-seh-exceptions --enable-shared --enable-static --enable-threads=posix --enable-version-specific-runtime-libs --disable-bootstrap --disable-graphite --disable-libada --disable-libstdcxx-pch --disable-libstdcxx-debug --disable-libquadmath --disable-lto --disable-nls --disable-multilib --disable-rpath --disable-symvers --disable-werror --disable-win32-registry --with-gnu-as --with-gnu-ld --with-system-libiconv --with-system-libz --with-gmp=/win/makedepends --with-mpfr=/win/makedepends --with-mpc=/win/makedepends]
+        ignore line: [Thread model: posix]
+        ignore line: [Supported LTO compression algorithms: zlib]
+        ignore line: [gcc version 13.1.0 (GCC) ]
+        ignore line: [COMPILER_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/]
+        ignore line: [LIBRARY_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../]
+        ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_af1ed.exe' '-mtune=generic' '-march=nocona' '-dumpdir' 'cmTC_af1ed.']
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/collect2.exe -m i386pep -Bdynamic -o cmTC_af1ed.exe C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0 -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../.. CMakeFiles/cmTC_af1ed.dir/CMakeCCompilerABI.c.obj --out-implib libcmTC_af1ed.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lgcc_eh -lmoldname -lmingwex -lmsvcrt -lkernel32 -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -liconv -lmingw32 -lgcc -lgcc_eh -lmoldname -lmingwex -lmsvcrt -lkernel32 C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o]
+        ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_af1ed.exe' '-mtune=generic' '-march=nocona' '-dumpdir' 'cmTC_af1ed.']
+        ignore line: []
+        ignore line: []
+        implicit libs: []
+        implicit objs: []
+        implicit dirs: []
+        implicit fwks: []
+      
+      
+  -
+    kind: "try_compile-v1"
+    backtrace:
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCompilerABI.cmake:57 (try_compile)"
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    checks:
+      - "Detecting CXX compiler ABI info"
+    directories:
+      source: "C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-xdlico"
+      binary: "C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-xdlico"
+    cmakeVariables:
+      CMAKE_CXX_FLAGS: ""
+      CMAKE_CXX_FLAGS_DEBUG: "-g"
+      CMAKE_EXE_LINKER_FLAGS: ""
+    buildResult:
+      variable: "CMAKE_CXX_ABI_COMPILED"
+      cached: true
+      stdout: |
+        Change Dir: C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-xdlico
+        
+        Run Build Command(s):C:/Program Files/JetBrains/CLion 2023.2.2/bin/ninja/win/x64/ninja.exe -v cmTC_16d5a && [1/2] C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\G__~1.EXE   -fdiagnostics-color=always   -v -o CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj -c "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCXXCompilerABI.cpp"
+        Using built-in specs.
+        COLLECT_GCC=C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\G__~1.EXE
+        Target: x86_64-w64-mingw32
+        Configured with: ../gcc-13.1.0/configure --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --build=x86_64-alpine-linux-musl --prefix=/win --enable-checking=release --enable-fully-dynamic-string --enable-languages=c,c++ --with-arch=nocona --with-tune=generic --enable-libatomic --enable-libgomp --enable-libstdcxx-filesystem-ts --enable-libstdcxx-time --enable-seh-exceptions --enable-shared --enable-static --enable-threads=posix --enable-version-specific-runtime-libs --disable-bootstrap --disable-graphite --disable-libada --disable-libstdcxx-pch --disable-libstdcxx-debug --disable-libquadmath --disable-lto --disable-nls --disable-multilib --disable-rpath --disable-symvers --disable-werror --disable-win32-registry --with-gnu-as --with-gnu-ld --with-system-libiconv --with-system-libz --with-gmp=/win/makedepends --with-mpfr=/win/makedepends --with-mpc=/win/makedepends
+        Thread model: posix
+        Supported LTO compression algorithms: zlib
+        gcc version 13.1.0 (GCC) 
+        COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_16d5a.dir/'
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/cc1plus.exe -quiet -v -iprefix C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/ -D_REENTRANT C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpdir CMakeFiles/cmTC_16d5a.dir/ -dumpbase CMakeCXXCompilerABI.cpp.cpp -dumpbase-ext .cpp -mtune=generic -march=nocona -version -fdiagnostics-color=always -o C:\\Users\\james\\AppData\\Local\\Temp\\ccqTKHFI.s
+        GNU C++17 (GCC) version 13.1.0 (x86_64-w64-mingw32)
+        	compiled by GNU C version 13.1.0, GMP version 6.2.1, MPFR version 4.2.0-p4, MPC version 1.3.1, isl version none
+        GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
+        ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++"
+        ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32"
+        ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward"
+        ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include"
+        ignoring nonexistent directory "/win/include"
+        ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../include"
+        ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed"
+        ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include"
+        ignoring nonexistent directory "/mingw/include"
+        #include "..." search starts here:
+        #include <...> search starts here:
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../include
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include
+        End of search list.
+        Compiler executable checksum: e75de627edc3c57e31324b930b15b056
+        COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_16d5a.dir/'
+         as -v -o CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj C:\\Users\\james\\AppData\\Local\\Temp\\ccqTKHFI.s
+        GNU assembler version 2.40 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.40
+        COMPILER_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/
+        LIBRARY_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../
+        COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.'
+        [2/2] cmd.exe /C "cd . && C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\G__~1.EXE  -v CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj -o cmTC_16d5a.exe -Wl,--out-implib,libcmTC_16d5a.dll.a -Wl,--major-image-version,0,--minor-image-version,0   && cd ."
+        Using built-in specs.
+        COLLECT_GCC=C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\G__~1.EXE
+        COLLECT_LTO_WRAPPER=C:/Program\\ Files/JetBrains/CLion\\ 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/lto-wrapper.exe
+        Target: x86_64-w64-mingw32
+        Configured with: ../gcc-13.1.0/configure --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --build=x86_64-alpine-linux-musl --prefix=/win --enable-checking=release --enable-fully-dynamic-string --enable-languages=c,c++ --with-arch=nocona --with-tune=generic --enable-libatomic --enable-libgomp --enable-libstdcxx-filesystem-ts --enable-libstdcxx-time --enable-seh-exceptions --enable-shared --enable-static --enable-threads=posix --enable-version-specific-runtime-libs --disable-bootstrap --disable-graphite --disable-libada --disable-libstdcxx-pch --disable-libstdcxx-debug --disable-libquadmath --disable-lto --disable-nls --disable-multilib --disable-rpath --disable-symvers --disable-werror --disable-win32-registry --with-gnu-as --with-gnu-ld --with-system-libiconv --with-system-libz --with-gmp=/win/makedepends --with-mpfr=/win/makedepends --with-mpc=/win/makedepends
+        Thread model: posix
+        Supported LTO compression algorithms: zlib
+        gcc version 13.1.0 (GCC) 
+        COMPILER_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/
+        LIBRARY_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../
+        COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_16d5a.exe' '-shared-libgcc' '-mtune=generic' '-march=nocona' '-dumpdir' 'cmTC_16d5a.'
+         C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/collect2.exe -m i386pep -Bdynamic -o cmTC_16d5a.exe C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0 -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../.. CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj --out-implib libcmTC_16d5a.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -liconv -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o
+        COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_16d5a.exe' '-shared-libgcc' '-mtune=generic' '-march=nocona' '-dumpdir' 'cmTC_16d5a.'
+        
+      exitCode: 0
+  -
+    kind: "message-v1"
+    backtrace:
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCompilerABI.cmake:127 (message)"
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Parsed CXX implicit include dir info: rv=done
+        found start of include info
+        found start of implicit include info
+          add: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++]
+          add: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32]
+          add: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward]
+          add: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include]
+          add: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../include]
+          add: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed]
+          add: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include]
+        end of search list found
+        collapse include dir [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++] ==> [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++]
+        collapse include dir [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32] ==> [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32]
+        collapse include dir [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward] ==> [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward]
+        collapse include dir [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include] ==> [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include]
+        collapse include dir [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../include] ==> [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/include]
+        collapse include dir [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed] ==> [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed]
+        collapse include dir [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include] ==> [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/x86_64-w64-mingw32/include]
+        implicit include dirs: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/include;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed;C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/x86_64-w64-mingw32/include]
+      
+      
+  -
+    kind: "message-v1"
+    backtrace:
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeDetermineCompilerABI.cmake:152 (message)"
+      - "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Parsed CXX implicit link information:
+        link line regex: [^( *|.*[/\\])(ld\\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
+        ignore line: [Change Dir: C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-xdlico]
+        ignore line: []
+        ignore line: [Run Build Command(s):C:/Program Files/JetBrains/CLion 2023.2.2/bin/ninja/win/x64/ninja.exe -v cmTC_16d5a && [1/2] C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\G__~1.EXE   -fdiagnostics-color=always   -v -o CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj -c "C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCXXCompilerABI.cpp"]
+        ignore line: [Using built-in specs.]
+        ignore line: [COLLECT_GCC=C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\G__~1.EXE]
+        ignore line: [Target: x86_64-w64-mingw32]
+        ignore line: [Configured with: ../gcc-13.1.0/configure --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --build=x86_64-alpine-linux-musl --prefix=/win --enable-checking=release --enable-fully-dynamic-string --enable-languages=c,c++ --with-arch=nocona --with-tune=generic --enable-libatomic --enable-libgomp --enable-libstdcxx-filesystem-ts --enable-libstdcxx-time --enable-seh-exceptions --enable-shared --enable-static --enable-threads=posix --enable-version-specific-runtime-libs --disable-bootstrap --disable-graphite --disable-libada --disable-libstdcxx-pch --disable-libstdcxx-debug --disable-libquadmath --disable-lto --disable-nls --disable-multilib --disable-rpath --disable-symvers --disable-werror --disable-win32-registry --with-gnu-as --with-gnu-ld --with-system-libiconv --with-system-libz --with-gmp=/win/makedepends --with-mpfr=/win/makedepends --with-mpc=/win/makedepends]
+        ignore line: [Thread model: posix]
+        ignore line: [Supported LTO compression algorithms: zlib]
+        ignore line: [gcc version 13.1.0 (GCC) ]
+        ignore line: [COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_16d5a.dir/']
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/cc1plus.exe -quiet -v -iprefix C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/ -D_REENTRANT C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpdir CMakeFiles/cmTC_16d5a.dir/ -dumpbase CMakeCXXCompilerABI.cpp.cpp -dumpbase-ext .cpp -mtune=generic -march=nocona -version -fdiagnostics-color=always -o C:\\Users\\james\\AppData\\Local\\Temp\\ccqTKHFI.s]
+        ignore line: [GNU C++17 (GCC) version 13.1.0 (x86_64-w64-mingw32)]
+        ignore line: [	compiled by GNU C version 13.1.0  GMP version 6.2.1  MPFR version 4.2.0-p4  MPC version 1.3.1  isl version none]
+        ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
+        ignore line: [ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++"]
+        ignore line: [ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32"]
+        ignore line: [ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward"]
+        ignore line: [ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include"]
+        ignore line: [ignoring nonexistent directory "/win/include"]
+        ignore line: [ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../include"]
+        ignore line: [ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed"]
+        ignore line: [ignoring duplicate directory "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include"]
+        ignore line: [ignoring nonexistent directory "/mingw/include"]
+        ignore line: [#include "..." search starts here:]
+        ignore line: [#include <...> search starts here:]
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++]
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32]
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/backward]
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include]
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../include]
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/include-fixed]
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/include]
+        ignore line: [End of search list.]
+        ignore line: [Compiler executable checksum: e75de627edc3c57e31324b930b15b056]
+        ignore line: [COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_16d5a.dir/']
+        ignore line: [ as -v -o CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj C:\\Users\\james\\AppData\\Local\\Temp\\ccqTKHFI.s]
+        ignore line: [GNU assembler version 2.40 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.40]
+        ignore line: [COMPILER_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/]
+        ignore line: [LIBRARY_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../]
+        ignore line: [COLLECT_GCC_OPTIONS='-fdiagnostics-color=always' '-v' '-o' 'CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=generic' '-march=nocona' '-dumpdir' 'CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.']
+        ignore line: [[2/2] cmd.exe /C "cd . && C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\G__~1.EXE  -v CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj -o cmTC_16d5a.exe -Wl --out-implib libcmTC_16d5a.dll.a -Wl --major-image-version 0 --minor-image-version 0   && cd ."]
+        ignore line: [Using built-in specs.]
+        ignore line: [COLLECT_GCC=C:\\PROGRA~1\\JETBRA~1\\CLION2~1.2\\bin\\mingw\\bin\\G__~1.EXE]
+        ignore line: [COLLECT_LTO_WRAPPER=C:/Program\\ Files/JetBrains/CLion\\ 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/lto-wrapper.exe]
+        ignore line: [Target: x86_64-w64-mingw32]
+        ignore line: [Configured with: ../gcc-13.1.0/configure --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --build=x86_64-alpine-linux-musl --prefix=/win --enable-checking=release --enable-fully-dynamic-string --enable-languages=c,c++ --with-arch=nocona --with-tune=generic --enable-libatomic --enable-libgomp --enable-libstdcxx-filesystem-ts --enable-libstdcxx-time --enable-seh-exceptions --enable-shared --enable-static --enable-threads=posix --enable-version-specific-runtime-libs --disable-bootstrap --disable-graphite --disable-libada --disable-libstdcxx-pch --disable-libstdcxx-debug --disable-libquadmath --disable-lto --disable-nls --disable-multilib --disable-rpath --disable-symvers --disable-werror --disable-win32-registry --with-gnu-as --with-gnu-ld --with-system-libiconv --with-system-libz --with-gmp=/win/makedepends --with-mpfr=/win/makedepends --with-mpc=/win/makedepends]
+        ignore line: [Thread model: posix]
+        ignore line: [Supported LTO compression algorithms: zlib]
+        ignore line: [gcc version 13.1.0 (GCC) ]
+        ignore line: [COMPILER_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/]
+        ignore line: [LIBRARY_PATH=C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/]
+        ignore line: [C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../]
+        ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_16d5a.exe' '-shared-libgcc' '-mtune=generic' '-march=nocona' '-dumpdir' 'cmTC_16d5a.']
+        ignore line: [ C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../libexec/gcc/x86_64-w64-mingw32/13.1.0/collect2.exe -m i386pep -Bdynamic -o cmTC_16d5a.exe C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/crtbegin.o -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0 -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib -LC:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../.. CMakeFiles/cmTC_16d5a.dir/CMakeCXXCompilerABI.cpp.obj --out-implib libcmTC_16d5a.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -liconv -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lkernel32 C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/../lib/gcc/x86_64-w64-mingw32/13.1.0/crtend.o]
+        ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_16d5a.exe' '-shared-libgcc' '-mtune=generic' '-march=nocona' '-dumpdir' 'cmTC_16d5a.']
+        ignore line: []
+        ignore line: []
+        implicit libs: []
+        implicit objs: []
+        implicit dirs: []
+        implicit fwks: []
+      
+      
+...
Index: cmake-build-debug/CMakeFiles/TargetDirectories.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/TargetDirectories.txt b/cmake-build-debug/CMakeFiles/TargetDirectories.txt
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/TargetDirectories.txt	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,3 @@
+C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/Final.dir
+C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/edit_cache.dir
+C:/Users/james/C++ code/Final/cmake-build-debug/CMakeFiles/rebuild_cache.dir
Index: cmake-build-debug/CMakeFiles/clion-Debug-log.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/clion-Debug-log.txt b/cmake-build-debug/CMakeFiles/clion-Debug-log.txt
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/clion-Debug-log.txt	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,4 @@
+"C:\Program Files\JetBrains\CLion 2023.2.2\bin\cmake\win\x64\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug "-DCMAKE_MAKE_PROGRAM=C:/Program Files/JetBrains/CLion 2023.2.2/bin/ninja/win/x64/ninja.exe" -G Ninja -S "C:\Users\james\C++ code\Final" -B "C:\Users\james\C++ code\Final\cmake-build-debug"
+-- Configuring done (0.0s)
+-- Generating done (0.0s)
+-- Build files have been written to: C:/Users/james/C++ code/Final/cmake-build-debug
Index: cmake-build-debug/CMakeFiles/clion-environment.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/clion-environment.txt b/cmake-build-debug/CMakeFiles/clion-environment.txt
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/clion-environment.txt	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,4 @@
+ToolSet: w64 11.0 (local)@C:\Program Files\JetBrains\CLion 2023.2.2\bin\mingw
+Options: 
+
+Options:-DCMAKE_MAKE_PROGRAM=C:/Program Files/JetBrains/CLion 2023.2.2/bin/ninja/win/x64/ninja.exe
\ No newline at end of file
Index: cmake-build-debug/CMakeFiles/cmake.check_cache
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/cmake.check_cache b/cmake-build-debug/CMakeFiles/cmake.check_cache
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/cmake.check_cache	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,1 @@
+# This file is generated by cmake for dependency checking of the CMakeCache.txt file
Index: cmake-build-debug/CMakeFiles/rules.ninja
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/rules.ninja b/cmake-build-debug/CMakeFiles/rules.ninja
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/CMakeFiles/rules.ninja	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,64 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Ninja" Generator, CMake Version 3.26
+
+# This file contains all the rules used to get the outputs files
+# built from the input files.
+# It is included in the main 'build.ninja'.
+
+# =============================================================================
+# Project: Final
+# Configurations: Debug
+# =============================================================================
+# =============================================================================
+
+#############################################
+# Rule for compiling CXX files.
+
+rule CXX_COMPILER__Final_unscanned_Debug
+  depfile = $DEP_FILE
+  deps = gcc
+  command = C:\PROGRA~1\JETBRA~1\CLION2~1.2\bin\mingw\bin\G__~1.EXE $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
+  description = Building CXX object $out
+
+
+#############################################
+# Rule for linking CXX executable.
+
+rule CXX_EXECUTABLE_LINKER__Final_Debug
+  command = cmd.exe /C "$PRE_LINK && C:\PROGRA~1\JETBRA~1\CLION2~1.2\bin\mingw\bin\G__~1.EXE $FLAGS $LINK_FLAGS $in -o $TARGET_FILE -Wl,--out-implib,$TARGET_IMPLIB -Wl,--major-image-version,0,--minor-image-version,0 $LINK_PATH $LINK_LIBRARIES && $POST_BUILD"
+  description = Linking CXX executable $TARGET_FILE
+  restat = $RESTAT
+
+
+#############################################
+# Rule for running custom commands.
+
+rule CUSTOM_COMMAND
+  command = $COMMAND
+  description = $DESC
+
+
+#############################################
+# Rule for re-running cmake.
+
+rule RERUN_CMAKE
+  command = "C:\Program Files\JetBrains\CLion 2023.2.2\bin\cmake\win\x64\bin\cmake.exe" --regenerate-during-build -S"C:\Users\james\C++ code\Final" -B"C:\Users\james\C++ code\Final\cmake-build-debug"
+  description = Re-running CMake...
+  generator = 1
+
+
+#############################################
+# Rule for cleaning all built files.
+
+rule CLEAN
+  command = "C:\Program Files\JetBrains\CLion 2023.2.2\bin\ninja\win\x64\ninja.exe" $FILE_ARG -t clean $TARGETS
+  description = Cleaning all built files...
+
+
+#############################################
+# Rule for printing all primary targets available.
+
+rule HELP
+  command = "C:\Program Files\JetBrains\CLion 2023.2.2\bin\ninja\win\x64\ninja.exe" -t targets
+  description = All primary targets available:
+
Index: cmake-build-debug/Testing/Temporary/LastTest.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/Testing/Temporary/LastTest.log b/cmake-build-debug/Testing/Temporary/LastTest.log
new file mode 100644
--- /dev/null	(revision cc91a736cf1037809026cb20804be01f78b5b621)
+++ b/cmake-build-debug/Testing/Temporary/LastTest.log	(revision cc91a736cf1037809026cb20804be01f78b5b621)
@@ -0,0 +1,3 @@
+Start testing: Dec 13 19:20 Pacific Standard Time
+----------------------------------------------------------
+End testing: Dec 13 19:20 Pacific Standard Time
Index: cmake-build-debug/build.ninja
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/build.ninja b/cmake-build-debug/build.ninja
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/build.ninja	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,164 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Ninja" Generator, CMake Version 3.26
+
+# This file contains all the build statements describing the
+# compilation DAG.
+
+# =============================================================================
+# Write statements declared in CMakeLists.txt:
+# 
+# Which is the root file.
+# =============================================================================
+
+# =============================================================================
+# Project: Final
+# Configurations: Debug
+# =============================================================================
+
+#############################################
+# Minimal version of Ninja required by this file
+
+ninja_required_version = 1.5
+
+
+#############################################
+# Set configuration variable for custom commands.
+
+CONFIGURATION = Debug
+# =============================================================================
+# Include auxiliary files.
+
+
+#############################################
+# Include rules file.
+
+include CMakeFiles/rules.ninja
+
+# =============================================================================
+
+#############################################
+# Logical path to working directory; prefix for absolute paths.
+
+cmake_ninja_workdir = C$:/Users/james/C++$ code/Final/cmake-build-debug/
+# =============================================================================
+# Object build statements for EXECUTABLE target Final
+
+
+#############################################
+# Order-only phony target for Final
+
+build cmake_object_order_depends_target_Final: phony || CMakeFiles/Final.dir
+
+build CMakeFiles/Final.dir/main.cpp.obj: CXX_COMPILER__Final_unscanned_Debug C$:/Users/james/C++$ code/Final/main.cpp || cmake_object_order_depends_target_Final
+  DEP_FILE = CMakeFiles\Final.dir\main.cpp.obj.d
+  FLAGS = -g -fdiagnostics-color=always
+  OBJECT_DIR = CMakeFiles\Final.dir
+  OBJECT_FILE_DIR = CMakeFiles\Final.dir
+
+build CMakeFiles/Final.dir/BasicCalculator.cpp.obj: CXX_COMPILER__Final_unscanned_Debug C$:/Users/james/C++$ code/Final/BasicCalculator.cpp || cmake_object_order_depends_target_Final
+  DEP_FILE = CMakeFiles\Final.dir\BasicCalculator.cpp.obj.d
+  FLAGS = -g -fdiagnostics-color=always
+  OBJECT_DIR = CMakeFiles\Final.dir
+  OBJECT_FILE_DIR = CMakeFiles\Final.dir
+
+build CMakeFiles/Final.dir/ScientificCalculator.cpp.obj: CXX_COMPILER__Final_unscanned_Debug C$:/Users/james/C++$ code/Final/ScientificCalculator.cpp || cmake_object_order_depends_target_Final
+  DEP_FILE = CMakeFiles\Final.dir\ScientificCalculator.cpp.obj.d
+  FLAGS = -g -fdiagnostics-color=always
+  OBJECT_DIR = CMakeFiles\Final.dir
+  OBJECT_FILE_DIR = CMakeFiles\Final.dir
+
+build CMakeFiles/Final.dir/Calculator.cpp.obj: CXX_COMPILER__Final_unscanned_Debug C$:/Users/james/C++$ code/Final/Calculator.cpp || cmake_object_order_depends_target_Final
+  DEP_FILE = CMakeFiles\Final.dir\Calculator.cpp.obj.d
+  FLAGS = -g -fdiagnostics-color=always
+  OBJECT_DIR = CMakeFiles\Final.dir
+  OBJECT_FILE_DIR = CMakeFiles\Final.dir
+
+
+# =============================================================================
+# Link build statements for EXECUTABLE target Final
+
+
+#############################################
+# Link the executable Final.exe
+
+build Final.exe: CXX_EXECUTABLE_LINKER__Final_Debug CMakeFiles/Final.dir/main.cpp.obj CMakeFiles/Final.dir/BasicCalculator.cpp.obj CMakeFiles/Final.dir/ScientificCalculator.cpp.obj CMakeFiles/Final.dir/Calculator.cpp.obj
+  FLAGS = -g
+  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
+  OBJECT_DIR = CMakeFiles\Final.dir
+  POST_BUILD = cd .
+  PRE_LINK = cd .
+  TARGET_FILE = Final.exe
+  TARGET_IMPLIB = libFinal.dll.a
+  TARGET_PDB = Final.exe.dbg
+
+
+#############################################
+# Utility command for edit_cache
+
+build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
+  COMMAND = cmd.exe /C "cd /D "C:\Users\james\C++ code\Final\cmake-build-debug" && "C:\Program Files\JetBrains\CLion 2023.2.2\bin\cmake\win\x64\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
+  DESC = No interactive CMake dialog available...
+  restat = 1
+
+build edit_cache: phony CMakeFiles/edit_cache.util
+
+
+#############################################
+# Utility command for rebuild_cache
+
+build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
+  COMMAND = cmd.exe /C "cd /D "C:\Users\james\C++ code\Final\cmake-build-debug" && "C:\Program Files\JetBrains\CLion 2023.2.2\bin\cmake\win\x64\bin\cmake.exe" --regenerate-during-build -S"C:\Users\james\C++ code\Final" -B"C:\Users\james\C++ code\Final\cmake-build-debug""
+  DESC = Running CMake to regenerate build system...
+  pool = console
+  restat = 1
+
+build rebuild_cache: phony CMakeFiles/rebuild_cache.util
+
+# =============================================================================
+# Target aliases.
+
+build Final: phony Final.exe
+
+# =============================================================================
+# Folder targets.
+
+# =============================================================================
+
+#############################################
+# Folder: C:/Users/james/C++ code/Final/cmake-build-debug
+
+build all: phony Final.exe
+
+# =============================================================================
+# Built-in targets
+
+
+#############################################
+# Re-run CMake if any of its inputs changed.
+
+build build.ninja: RERUN_CMAKE | C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCXXInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeRCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/GNU-CXX.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-CXX-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-CXX.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-windres.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/WindowsPaths.cmake C$:/Users/james/C++$ code/Final/CMakeLists.txt CMakeCache.txt CMakeFiles/3.26.4/CMakeCCompiler.cmake CMakeFiles/3.26.4/CMakeCXXCompiler.cmake CMakeFiles/3.26.4/CMakeRCCompiler.cmake CMakeFiles/3.26.4/CMakeSystem.cmake
+  pool = console
+
+
+#############################################
+# A missing CMake input file is not an error.
+
+build C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCXXInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeRCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/GNU-CXX.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Compiler/GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-CXX-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU-CXX.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows-windres.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/Windows.cmake C$:/Program$ Files/JetBrains/CLion$ 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/Platform/WindowsPaths.cmake C$:/Users/james/C++$ code/Final/CMakeLists.txt CMakeCache.txt CMakeFiles/3.26.4/CMakeCCompiler.cmake CMakeFiles/3.26.4/CMakeCXXCompiler.cmake CMakeFiles/3.26.4/CMakeRCCompiler.cmake CMakeFiles/3.26.4/CMakeSystem.cmake: phony
+
+
+#############################################
+# Clean all the built files.
+
+build clean: CLEAN
+
+
+#############################################
+# Print all primary targets available.
+
+build help: HELP
+
+
+#############################################
+# Make the all target the default.
+
+default all
Index: cmake-build-debug/cmake_install.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/cmake_install.cmake b/cmake-build-debug/cmake_install.cmake
new file mode 100644
--- /dev/null	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
+++ b/cmake-build-debug/cmake_install.cmake	(revision 685bfee8affbd4101767deebf6dd8bba3c374302)
@@ -0,0 +1,49 @@
+# Install script for directory: C:/Users/james/C++ code/Final
+
+# Set the install prefix
+if(NOT DEFINED CMAKE_INSTALL_PREFIX)
+  set(CMAKE_INSTALL_PREFIX "C:/Program Files (x86)/Final")
+endif()
+string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
+
+# Set the install configuration name.
+if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
+  if(BUILD_TYPE)
+    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
+           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
+  else()
+    set(CMAKE_INSTALL_CONFIG_NAME "Debug")
+  endif()
+  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
+endif()
+
+# Set the component getting installed.
+if(NOT CMAKE_INSTALL_COMPONENT)
+  if(COMPONENT)
+    message(STATUS "Install component: \"${COMPONENT}\"")
+    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
+  else()
+    set(CMAKE_INSTALL_COMPONENT)
+  endif()
+endif()
+
+# Is this installation the result of a crosscompile?
+if(NOT DEFINED CMAKE_CROSSCOMPILING)
+  set(CMAKE_CROSSCOMPILING "FALSE")
+endif()
+
+# Set default install directory permissions.
+if(NOT DEFINED CMAKE_OBJDUMP)
+  set(CMAKE_OBJDUMP "C:/Program Files/JetBrains/CLion 2023.2.2/bin/mingw/bin/objdump.exe")
+endif()
+
+if(CMAKE_INSTALL_COMPONENT)
+  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
+else()
+  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
+endif()
+
+string(REPLACE ";" "\n" CMAKE_INSTALL_MANIFEST_CONTENT
+       "${CMAKE_INSTALL_MANIFEST_FILES}")
+file(WRITE "C:/Users/james/C++ code/Final/cmake-build-debug/${CMAKE_INSTALL_MANIFEST}"
+     "${CMAKE_INSTALL_MANIFEST_CONTENT}")
Index: main.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.cpp b/main.cpp
new file mode 100644
--- /dev/null	(revision cc91a736cf1037809026cb20804be01f78b5b621)
+++ b/main.cpp	(revision cc91a736cf1037809026cb20804be01f78b5b621)
@@ -0,0 +1,653 @@
+/*
+* Final Project
+* Author: James Owen
+* Student ID number: T00704318
+* File name: main.cpp
+* Requirements:
+*   Basic and scientific calculator application
+*/
+
+#include <iostream>
+#include <stdexcept>
+#include <string>
+#include <vector>
+#include "Calculator.h"
+#include "ScientificCalculator.h"
+#include "BasicCalculator.h"
+
+using namespace std;
+
+// constants
+#define BASIC "Basic"
+#define SCIENTIFIC "Scientific"
+
+// calculator functions
+void basicCalc();
+void scientificCalc();
+
+// get user input
+void inputVals(string = "", string = "");
+
+// parse output
+void parser(string = "", string = "");
+
+// basic calculator functions
+void addition(double = 0.0, double = 0.0, string = "");
+void subtraction(double = 0.0, double = 0.0, string = "");
+void multiplication(double = 0.0, double = 0.0, string = "");
+void division(double = 0.0, double = 0.0, string = "");
+void square(double = 0.0, string = "");
+void squareRoot(double = 0.0, string = "");
+
+// scientific calculator functions
+void cosine(double = 0.0);
+void sine(double = 0.0);
+void tangent(double = 0.0);
+void absolute(double = 0.0);
+void power(double = 0.0, double = 0.0);
+
+
+// main function just starts by calling basic calculator
+int main() {
+    basicCalc();
+}
+
+// basic calculator function
+void basicCalc() {
+    string userIn = "";
+
+    // prompt user to enter input
+    cout << "\nWelcome to the Basic Calculator here are your options: ";
+    cout << "\nAddition ((a/A) or (num1 + num2))";
+    cout << "\nSubtraction ((s/S o)r (num1 - num2))";
+    cout << "\nMultiplication ((m/M) or (num1 * num2))";
+    cout << "\nDivision ((d/D) or (num1 / num2))";
+    cout << "\nSquare ((sq/SQ) or (num^))";
+    cout << "\nSquare Root ((sr/SR) or (num r))";
+    cout << "\nScientific Calculator (sc/SC)";
+    cout << "\nExit (e/E)";
+    cout << "\n\nPlease enter here:" << endl;
+
+    // input from user
+    getline(cin, userIn);
+
+    // if user selected one of the prompted calculations
+    if (userIn == "a" || userIn == "A" || userIn == "s" || userIn == "S" || userIn == "m" || userIn == "M" ||
+            userIn == "d" || userIn == "D" || userIn == "sq" || userIn == "SQ" || userIn == "sr" || userIn == "SR") {
+
+        inputVals(userIn, BASIC);
+    }
+
+    // Change to scientific calculator
+    else if (userIn == "sc" || userIn == "SC") {
+        scientificCalc();
+    }
+
+    // see if user has incorrect input or tried to exit or entered a keystroke input
+    else {
+        parser(userIn, BASIC);
+    }
+}
+
+// scientific calculator function
+void scientificCalc() {
+    string userIn = "";
+
+    // prompt user to enter input
+    cout << "\nWelcome to the Scientific Calculator here are your options: ";
+    cout << "\nAddition ((a/A) or (num1 + num2))";
+    cout << "\nSubtraction ((s/S o)r (num1 - num2))";
+    cout << "\nMultiplication ((m/M) or (num1 * num2))";
+    cout << "\nDivision ((d/D) or (num1 / num2))";
+    cout << "\nSquare ((sq/SQ) or (num^))";
+    cout << "\nSquare Root ((sr/SR) or (num r))";
+    cout << "\nSine ((sin/SIN) or (angle i))";
+    cout << "\nCosine ((cos/COS) or (angle c)";
+    cout << "\nTangent ((tan/TAN or (angle t)";
+    cout << "\nAbsolute Value ((abs/ABS) or (num |)";
+    cout << "\nPower of ((p/P) or (num p num))";
+    cout << "\nBasic Calculator (bc/BC)";
+    cout << "\nExit (e/E)";
+    cout << "\n\nPlease enter here:" << endl;
+
+    // input
+    getline(cin, userIn);
+
+    // if user selected one of the prompted calculations
+    if (userIn == "a" || userIn == "A" || userIn == "s" || userIn == "S" || userIn == "m" || userIn == "M" ||
+        userIn == "d" || userIn == "D" || userIn == "sq" || userIn == "SQ" || userIn == "sr" || userIn == "SR" ||
+        userIn == "sin" || userIn == "SIN" || userIn == "cos" || userIn == "COS" || userIn == "tan" || userIn == "TAN" ||
+        userIn == "abs" || userIn == "ABS" || userIn == "p" || userIn == "P") {
+        inputVals(userIn, SCIENTIFIC);
+    }
+
+    // Change to basic calculator
+    else if (userIn == "bc" || userIn == "BC") {
+        basicCalc();
+    }
+
+    // see if user has incorrect input or tried to exit or entered a keystroke input
+    else {
+        parser(userIn, SCIENTIFIC);
+    }
+}
+
+// method for prompted user input
+void inputVals(string userIn, string typeCalculator) {
+    string inVal;
+    double val1, val2;
+
+    cout << "\nPlease enter your first value: "; // prompt user for first input
+    getline(cin, inVal); // first value added to string
+
+    // try block to parse to double
+    try {
+        val1 = stod(inVal);
+    }
+
+    // catch block for if user entered a non-numeric argument
+    catch (const invalid_argument& e) {
+        cerr << "Invalid argument" << endl;
+
+        // if else to return to calculator if incorrect input
+        if (typeCalculator == BASIC) {
+            basicCalc();
+        }
+        else {
+            scientificCalc();
+        }
+    }
+
+    // catch block if user entered a argument that is out of range
+    catch (const out_of_range& e) {
+        cerr << "Value out of range" << endl;
+
+        // if else to return to calculator if incorrect input
+        if (typeCalculator == BASIC) {
+            basicCalc();
+        }
+        else {
+            scientificCalc();
+        }
+    }
+
+    // if statement to see if equation only requires one input
+    if (userIn != "sq" && userIn != "SQ" && userIn != "sr" && userIn != "SR" && userIn != "sin" && userIn != "SIN" &&
+    userIn != "cos" && userIn != "COS" && userIn != "tan" && userIn != "TAN" && userIn != "abs" && userIn != "ABS") {
+
+        cout << "\nPlease enter your second value: "; // prompt user to enter second value
+        getline(cin, inVal); // second value added to string
+
+        // try block to parse to double
+        try {
+            val2 = stod(inVal);
+        }
+
+        // catch block for if user entered a non-numeric argument
+        catch (const invalid_argument& e) {
+            cerr << "Invalid argument" << endl;
+
+            // if else to return to calculator if incorrect input
+            if (typeCalculator == BASIC) {
+                basicCalc();
+            }
+            else {
+                scientificCalc();
+            }
+        }
+
+        // catch block if user entered a argument that is out of range
+        catch (const out_of_range& e) {
+            cerr << "Value out of range" << endl;
+
+            // if else to return to calculator if incorrect input
+            if (typeCalculator == BASIC) {
+                basicCalc();
+            }
+            else {
+                scientificCalc();
+            }
+        }
+    }
+
+    // if statement to find the calculation the user wanted and take them to the function to execute
+    if (userIn == "a" || userIn == "A"){
+        addition(val1, val2, typeCalculator);
+    }
+    else if (userIn == "s" || userIn == "S") {
+        subtraction(val1, val2, typeCalculator);
+    }
+    else if (userIn == "m" || userIn == "M") {
+        multiplication(val1, val2, typeCalculator);
+    }
+    else if (userIn == "d" || userIn == "D") {
+        division(val1, val2, typeCalculator);
+    }
+    else if (userIn == "sq" || userIn == "SQ") {
+        square(val1, typeCalculator);
+    }
+    else if (userIn == "sr" || userIn == "SR") {
+        squareRoot(val1, typeCalculator);
+    }
+    else if (userIn == "sin" || userIn == "SIN") {
+        sine(val1);
+    }
+    else if (userIn == "cos" || userIn == "COS") {
+        cosine(val1);
+    }
+    else if (userIn == "tan" || userIn == "TAN") {
+        tangent(val1);
+    }
+    else if (userIn == "abs" || userIn == "ABS") {
+        absolute(val1);
+    }
+    else if (userIn == "p" || userIn == "P") {
+        power(val1, val2);
+    }
+
+    // clear cin
+    cin.ignore(numeric_limits<streamsize>::max(), '\n');
+
+    // if else to return to the calculator menu for user to do another action
+    if (typeCalculator == BASIC) {
+        basicCalc();
+    }
+    else {
+        scientificCalc();
+    }
+}
+
+// parser function parses user input or exits the program or finds the user has entered an incorrct value
+void parser(string userIn, string type) {
+
+    // iterate: to change if user wanted to exit the program
+    // decCount: to make sure entered numeric values only have 1 decimal
+    // negCount: to make sure there is only one negative in number
+    bool iterate = true, decCount = true, negCount = true;
+
+    string val1 = ""; // val1: holds users first numeric argument
+    char opp = '\0'; // opp: is the calculation type the user would like to execute
+    string val2 = ""; // val2 is the users second numeric argument
+
+    // for loop iterates through the input of the user
+    for (int i = 0; i < userIn.length(); i++) {
+
+        // if statement to ignore white spaces
+        if (userIn[i] == ' ') {
+            continue;
+        }
+
+        // check if user wants to exit, change iterate to false and break the loop
+        else if (userIn == "e" || userIn == "E") {
+            iterate = false;
+            cout << "Thanks for using the " << type << " Calculator!" << endl;
+            exit(0);
+            break;
+        }
+
+        // first number parse
+        else if ((isdigit(userIn[i]) || (userIn[i] == '.' && decCount) || (userIn[i] == '-' && negCount)) &&
+                opp == '\0' && val2.empty()) {
+
+            // if statement to make sure - wasn't entered in the middle of the number
+            if (val1 != "" && userIn[i] == '-') {
+                break;
+            }
+            val1 += userIn[i]; // concatenate val1
+
+            if (userIn[i] == '.') decCount = false; // set decCount to false once it has been used
+            if (userIn[i] == '-') negCount = false; // set negCount to false once it has been used
+        }
+
+        // get user input
+        else if (!val1.empty() && (userIn[i] == '+' || userIn[i] == '-' || userIn[i] == '/'  || userIn[i] == '*'
+                                   || userIn[i] == '^' || userIn[i] == 'r' || userIn[i] == 'i' || userIn[i] == 'c' ||
+                                   userIn[i] == 't' || userIn[i] == '|' || userIn[i] == 'p') && opp == '\0' && val2.empty()) {
+
+            opp = userIn[i]; // make opp equal to the operation the user wanted
+            decCount = true; // reset decCount to true for second argument
+            negCount = true; // reset negCount to true for second argument
+        }
+        else if (!val1.empty() && opp != '\0' && (isdigit(userIn[i]) || (userIn[i] == '.' && decCount) ||
+                (userIn[i] == '-' && negCount))) {
+
+            // if statement to make sure - wasn't entered in the middle of the number
+            if (val2 != "" && userIn[i] == '-') {
+                break;
+            }
+
+            val2 += userIn[i]; // concatenate val2
+
+            if (userIn[i] == '.') decCount = false; // set decCount to false once it has been used
+            if (userIn[i] == '-') negCount = false; // set negCount to false once it has been used
+        }
+
+        // break else
+        else {
+            break;
+        }
+    }
+    double numVal1, numVal2; // numbers that val1 and val2 will be parsed to
+
+    // check if val1 and val2 are empty else
+    if (!val1.empty() && !val2.empty()) {
+        // try parse val1
+        try {
+            numVal1 = stod(val1);
+            // try parse val2
+            try {
+                numVal2 = stod(val2);
+            }
+            // catch block if user entered a argument that is non-numeric
+            catch (const invalid_argument& e) {
+                cerr << "Invalid argument" << endl;
+            }
+            // catch block if user entered a argument that is out of range
+            catch (const out_of_range& e) {
+                cerr << "Value out of range" << endl;
+            }
+        }
+        // catch block if user entered a argument that is non-numeric
+        catch (const invalid_argument& e) {
+            cerr << "Invalid argument" << endl;
+        }
+        // catch block if user entered a argument that is out of range
+        catch (const out_of_range& e) {
+            cerr << "Value out of range" << endl;
+        }
+    }
+    // parse single value equations
+    else if (!val1.empty()) {
+        // try parse val1
+        try {
+            numVal1 = stod(val1);
+        }
+        // catch block if user entered a argument that is non-numeric
+        catch (const invalid_argument& e) {
+            cerr << "Invalid argument" << endl;
+        }
+        // catch block if user entered a argument that is out of range
+        catch (const out_of_range& e) {
+            cerr << "Value out of range" << endl;
+        }
+    }
+
+    // check for type of calculation if opp != '\0'
+    if (opp != '\0') {
+        // switch statement to find what calculation the user wanted and sends them there
+        switch (opp) {
+            case '+':
+                addition(numVal1, numVal2, type);
+                break;
+
+            case '-':
+                subtraction(numVal1, numVal2, type);
+                break;
+
+            case '*':
+                multiplication(numVal1, numVal2, type);
+                break;
+
+            case '/':
+                division(numVal1, numVal2, type);
+                break;
+
+            case '^':
+                square(numVal1, type);
+                break;
+
+            case 'r':
+                squareRoot(numVal1, type);
+                break;
+
+            case 'i':
+                sine(numVal1);
+                break;
+
+            case 'c':
+                cosine(numVal1);
+                break;
+
+            case 't':
+                tangent(numVal1);
+                break;
+
+            case '|':
+                absolute(numVal1);
+                break;
+
+            case 'p':
+                power(numVal1, numVal2);
+                break;
+        }
+    }
+    // user wants to exit the program
+    else if (userIn == "e" || userIn == "E") {
+        iterate = false;
+    }
+    // incorrect user input
+    else {
+        cout << "Incorrect Input Please try again." << endl;
+    }
+
+    // send user back to the calculator they came from
+    if (iterate) {
+        if (type == BASIC) {
+            basicCalc();
+        }
+        else {
+            scientificCalc();
+        }
+    }
+}
+
+//      basic calculator functions
+
+// function for addition
+void addition(double val1, double val2, string type) {
+    BasicCalculator *adds[3]; // basic calculator array
+
+    // if else to check which calculator the user is using
+    if (type == BASIC) {
+        adds[0] = new BasicCalculator(val1); // initiate val1 to position 0
+        adds[1] = new BasicCalculator(val2); // initiate val2 to position 1
+        adds[2] = new BasicCalculator(); // result to position 2
+    }
+    else {
+        adds[0] = new ScientificCalculator(val1); // initiate val1 to position 0
+        adds[1] = new ScientificCalculator(val2); // initiate val2 to position 1
+        adds[2] = new ScientificCalculator(); // result to position 2
+    }
+
+    *adds[2] = *adds[0] + *adds[1]; // add together using operator overloading
+
+    adds[2]->display(); // point to display function
+
+    // for loop to delete all object instances from memory
+    for (int i = 0; i < 3; i++) {
+        delete adds[i];
+    }
+}
+
+// function for subtraction
+void subtraction(double val1, double val2, string type) {
+    BasicCalculator *subs[3]; // basic calculator array
+
+    // if else to check which calculator the user is using
+    if (type == BASIC) {
+        subs[0] = new BasicCalculator(val1); // initiate val1 to position 0
+        subs[1] = new BasicCalculator(val2); // initiate val2 to position 1
+        subs[2] = new BasicCalculator(); // result to position 2
+    }
+    else {
+        subs[0] = new ScientificCalculator(val1); // initiate val1 to position 0
+        subs[1] = new ScientificCalculator(val2); // initiate val2 to position 1
+        subs[2] = new ScientificCalculator(); // result to position 2
+    }
+
+    *subs[2] = *subs[0] - *subs[1]; // subtract using operator overloading
+
+    subs[2]->display(); // point to display function
+
+    // for loop to delete all object instances from memory
+    for (int i = 0; i < 3; i++) {
+        delete subs[i];
+    }
+}
+
+// function for multiplication
+void multiplication(double val1, double val2, string type) {
+    BasicCalculator *mul[3]; // basic calculator array
+
+    // if else to check which calculator the user is using
+    if (type == BASIC) {
+        mul[0] = new BasicCalculator(val1); // initiate val1 to position 0
+        mul[1] = new BasicCalculator(val2); // initiate val2 to position 1
+        mul[2] = new BasicCalculator(); // result to position 2
+    }
+    else {
+        mul[0] = new ScientificCalculator(val1); // initiate val1 to position 0
+        mul[1] = new ScientificCalculator(val2); // initiate val2 to position 1
+        mul[2] = new ScientificCalculator(); // result to position 2
+    }
+
+    *mul[2] = *mul[0] * *mul[1]; // multiplication using operator overloading
+
+    mul[2]->display(); // point to display function
+
+    // for loop to delete all object instances from memory
+    for (int i = 0; i < 3; i++) {
+        delete mul[i];
+    }
+}
+
+// function for division
+void division(double val1, double val2, string type) {
+    BasicCalculator *div[3]; // basic calculator array
+
+    // if else to check which calculator the user is using
+    if (type == BASIC) {
+        div[0] = new BasicCalculator(val1); // initiate val1 to position 0
+        div[1] = new BasicCalculator(val2); // initiate val2 to position 1
+        div[2] = new BasicCalculator(); // result to position 2
+    }
+    else {
+        div[0] = new ScientificCalculator(val1); // initiate val1 to position 0
+        div[1] = new ScientificCalculator(val2); // initiate val2 to position 1
+        div[2] = new ScientificCalculator(); // result to position 2
+    }
+
+    // divide by zero exception
+    try {
+        *div[2] = *div[0] / *div[1]; // division using operator overloading
+    }
+    catch (const runtime_error& e) {
+        cerr << "Error: " << e.what() << endl;
+    }
+
+    div[2]->display(); // point to display function
+
+    // for loop to delete all object instances from memory
+    for (int i = 0; i < 3; i++) {
+        delete div[i];
+    }
+}
+
+// function for square
+void square(double val, string type) {
+    BasicCalculator *squared; // basic calculator pointer
+
+    // if else to check which calculator the user is using
+    if (type == BASIC) {
+        squared = new BasicCalculator(val);
+    }
+    else {
+        squared = new ScientificCalculator(val);
+    }
+
+    *squared = squared->square(*squared); // point to squared function and re-initiate squared to return value
+
+    squared->display(); // point to display function
+
+    delete squared; // delete object instance of squared from memory
+}
+
+// function to find the square root
+void squareRoot(double val, string type) {
+    BasicCalculator *squareRooted; // basic calculator pointer
+
+    // if else to check which calculator the user is using
+    if (type == BASIC) {
+        squareRooted = new BasicCalculator(val);
+    }
+    else {
+        squareRooted = new ScientificCalculator(val);
+    }
+
+    *squareRooted = squareRooted->squareRoot(*squareRooted); // point to square root function and re-initialize to return value
+
+    squareRooted->display(); // point to display function
+
+    delete squareRooted; // delete object instance of squareRooted from memory
+}
+
+
+//       scientific calculator functions
+
+// function to find sin value
+void sine(double val) {
+    ScientificCalculator *sinVal = new ScientificCalculator(val); // initialize sinVal with val
+
+    *sinVal = sinVal->sin(*sinVal); // point to sin function to return the object containing result
+
+    sinVal->display(); // display output
+
+    delete sinVal; // delete sinVal from memory
+}
+
+// function to find cos val
+void cosine(double val) {
+    ScientificCalculator *cosVal = new ScientificCalculator(val); // initialize cosVal with val
+
+    *cosVal = cosVal->cos(*cosVal); // point to cos function to return the object containing result
+
+    cosVal->display(); // display output
+
+    delete cosVal; // delete cosVal from memory
+}
+
+// function to find tan val
+void tangent(double val) {
+    ScientificCalculator *tanVal = new ScientificCalculator(val); // initialize tanVal with val
+
+    *tanVal = tanVal->tan(*tanVal); // point to tan function to return the object containing result
+
+    tanVal->display(); // display output
+
+    delete tanVal; // delete tanVal from memory
+}
+
+// function to find a numbers absolute value
+void absolute(double val) {
+    ScientificCalculator *absVal = new ScientificCalculator(val); // initialize absVal with val
+
+    *absVal = absVal->abs(*absVal); // point to abs function to return the object containing result
+
+    absVal->display(); // display output
+
+    delete absVal; // delete absVal from memory
+}
+
+// function to find the result of a number to the power of another number
+void power(double val1, double val2) {
+    ScientificCalculator *powVals[2] = { new ScientificCalculator(val1), new ScientificCalculator(val2)}; // initialize the two array items to contain val1, and val2 in object
+
+    *powVals[0] = powVals[0]->powerOf(*powVals[0], *powVals[1]); // have position 0 to contain result point to powerOf function to calculate
+
+    powVals[0]->display(); // display output
+
+    // for loop to delete array items from memory
+    for (int i = 0; i < 2; i++) {
+        delete powVals[i];
+    }
+}
\ No newline at end of file
diff --git a/cmake-build-debug/.cmake/api/v1/query/cache-v2 b/cmake-build-debug/.cmake/api/v1/query/cache-v2
new file mode 100644
diff --git a/cmake-build-debug/.cmake/api/v1/query/cmakeFiles-v1 b/cmake-build-debug/.cmake/api/v1/query/cmakeFiles-v1
new file mode 100644
diff --git a/cmake-build-debug/.cmake/api/v1/query/codemodel-v2 b/cmake-build-debug/.cmake/api/v1/query/codemodel-v2
new file mode 100644
diff --git a/cmake-build-debug/.cmake/api/v1/query/toolchains-v1 b/cmake-build-debug/.cmake/api/v1/query/toolchains-v1
new file mode 100644
diff --git a/cmake-build-debug/.ninja_deps b/cmake-build-debug/.ninja_deps
new file mode 100644
index 0000000000000000000000000000000000000000..44f137816aa9a14f5e52bc267157938d1b90666e
GIT binary patch
literal 47984
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
R{g)2d>}ysvtE_QZeFtfQp6dVr

diff --git a/cmake-build-debug/CMakeFiles/3.26.4/CMakeDetermineCompilerABI_C.bin b/cmake-build-debug/CMakeFiles/3.26.4/CMakeDetermineCompilerABI_C.bin
new file mode 100644
index 0000000000000000000000000000000000000000..570dffc2714ead45d8099666712f5a7def7574ef
GIT binary patch
literal 43069
zc%1Eh4R~BtwdkHC)8?n?Oxpk{EpR9errLxwO-l*{r)>r%B}rqOKq+u1Co?C>yiR7u
z`Ds%G4NZ~8P>oOYqF1kZm#TP0t;mJSQ(sWL?Nik7^I?7RJ)@uw1~np2qgL|P+CS%S
z&rh0L_1*9Fd^y?sth4r7Yp=cb+H3D~&YrftW2BG}QUvGR93dwNJ3J)+F$Cw*%br|H
z9xM6o<tH4i-@UxEKa@~n@n~OM9Z&*lBoa+3J(?0vMU+rPY2LY88Hfh8+Vb+!wVXzW
zmyqCl%gFW4lty+Cav=yZL#`|+D=4TY3LxA7X8|Eq%OG_#(Hw;53z*z^IPn6HNmiLN
zAqUi}8&DMncMGZAwrfk4R?6*!^f)1DB;G+tYk}$h1R;0j&`Gz4km^kEdq5IL_HwmJ
zZ7>Px!<TY_6k=3P(15?%pqf-6KaPMpLUlmaTJb=HiP|_roGE4iQVQpl5}v0v#_(tz
zJ2=m}40wYKZ%+XegyJ=1!0SmQsH|AmSmwG8p?o1mkLnr#WD%T=8S1fpS0}GKA!EG0
z*Jr>>hACg#mg5}HlL0TDhzAI7+vA+?woG_hI2zz>J;CYuBs^Qm|9nT6Z{%mbkv6w)
zq^q)Z#H%!qv{jGY@l6UIeoaYtf^!&g{@xFjA9em_BO#;Y-ihRrub?{8H(o->bm>>H
zsngd&KK=gHh<Cw1f?<p<A90K8K5_l^MU>8BN@sZ1k#fP+2;B9JJeB_QGVXqS!%r)^
z2z7vQ0Lz0I2bdVuc<J^Xb@t))Nb_1{>&UaMN1YzLJnGy)q2GYq6@Etf1FNwT>)>h(
zXxACEPkPVH5lXWHL^?@mO`71}i1*Cc*r@kRHuRs>BRU@GrP<J9zLVY=L^<hw1$)$}
z_Z7`I3Icgg`$qBf6hl4@L=kEFasbZwuJxu<B>+N6roCTD7gBaVkAioegv{6Ku|{6V
zdee}e0u~cgWutAU05;(p?V6nNxxQ2iH)njqch8X2!%*xa^+MrGzH%7~{fSjT{_Sw*
zu6ov_scN{0)(a)T#lO@uHI6!u)H5{>VxiKL&h#BbAT{ZPuY{|edXY`Mh<6o5yO0t_
zn;E|Q3`t!Ipx<qvH8}w_IL>O&bsTDN!grq=?pEPl&=uI)YAnw#w^H+X66t&eb90mF
z$CgqCoFC-A9AT=u;1Fd{0A^76m$^9<#(go={9Ryzqt22$&{Qs11PR<oKyA{0WUBsA
z9pgND!EbLz0w7KKFK(x1eEN1Q`aSsHGI9!vjTfL<y-1-iz<<zU`Ka^XZ>KchbuogU
zVqj;wfnNUW?bNzsMh63qpRF@#{SouU7tI&-byQ)qprl#X6QsAPZEv!aD&*DAQw;Cy
zsOLIg0BvK|=a{4x046m`nsAU6xc4wzFph~zG(WT?Am@5wqNxlxB}<yhpjydw(>LRt
zQP1tevr7*wre&vn6f}fG?7b7N4^OxrpO|jorZ@%Z)Tk$HLSIQiLsMpSr@4pk1`YUp
zN5gA9BW((Jpz2YtGCbk%J?MLCst{YOeI>0k)}xwr9noE0y`T1|Gk|-v;#<ssKn|$(
zC^fvbSQ2T0WOlR}-_g|tC>tV9S0anT%%t2Lyu>K#I7O|aZ3=7v%O{}xF!Wczyw<C@
z?(d(Qo0Ay=G3G8<O}b{lu+SIzZZnwzy5Ui;8>v>IRABsElg<-Bb&hFm%yRgSmY1M9
zo`CzV%RIz(drY`4?&8xc9O#dz3Xv5^dBGpo5#oBh$nE<2gu{D=Lo3je&f%RWiVDCu
zY<HY*wcg>LPv@shV;}$IO4^sG=lT$95O8_UBNXhsXQk-lsprSWB&YxSdU_jNEBK7L
zRF&|PMO@oQI~;)Z3}B5s=Nm1WL^`hk9J<JK1>AWQ?u>TL;;p&K;elDl@ZGZ{^>Yw@
z&m8jy!*9;bSqB7V)Vb<b+GAZOo#nSOH<#|4V|b{1M5JxP8$uTt6wHTE^jGVdTP#SH
z!&UKm!~0bhB(H$~j?{%<L&|7ZCAK&>CDjE3Aa(pVfRv98^8P;Toh_bTLwhyv(%dta
z@I2@jaiGk5vCJ0lZ0cD`$5c0L|KYpcB&AyvtAyG3xcneqVX_?l6EHt2&MH~fe_P6B
zwHYP!>3d!~f^g{89j<jL;#zmNyV<qQi!3^TLI)~l(Sg{=1lZEOv`-v$ZUIXhEh?b)
zSOa<JFmqD?|I1sL5~kbW!d1;LJUF(Ci;ZxxSzKHR7w-@kE8!w6E|$Q>hxx@Ait&20
z%k5EU&gCAg<e3<DK@f9KF$-~4SMY(wI|~JtHLtCE-L>qlwbk%HxmIZz`C$vz!`VhD
ze<KaOgT*keYN&ZN*1Q^Oe$UgWlH0ib{OIK|U1QV-Hlni7gs2mQHmGYIX#*g*3Xqlw
z@}U(t>^!yg#3~#D9ZYSPR<mLDQj~J^4vyNtLdXmPo<^~*g!}0q0$A8<H@3HMrH80r
zD!=Du=22k;8JPqRT!3B+9WlB*PbJuuI}U?F`K`I|e3h-E&a1Ovv^pR_@hA}ZfYJaP
zD7p@9E8q^)Sq#Otc+a@*k75Vqp72T+9|CAFb0Gs`aJTI(tnN>~iOA*O?8+k5(FzCc
zCnMXSvCBW64b5?i$8!$1(B90bXUW!)r=UW;SxP~Lb{wrJ@r`tV{givM)20eM+BLED
z1V(}^Qd!qaBNcEqO;ETnS79WN;uN=xOw!70SF*}~?JqdmyfQrNaUD*x7;|{G$aVN7
zmTwwDQ#|}Vai`dI_!}Z$fN|z5PJ^ZwL&n35;I7V`YMcNy76V#WZZt5uZ5TM!W<ztF
z!hSQ_g^}>YXxnTXST=PmpqCO2^#W?S82x(?FKC@VTgB@9KhHp&oj=+QW;5X!aXtr`
zX$Sh}ZcC(Yij2xXy*sNM82q{p4>7!VXUA(E#R}b#9RY0L4W@E!77S+l;H0}|TSlJs
z!o87iv-+;2RfH<AUQn=`_kv~|c5LI5d8!6ILLtd2(NWf%!F~WP#OkP@cM0|A!|T&S
z7BZvWO5fX%294p|Y|OcPYO(A69T*Zrw(Q+iG`z%taTN<Riy-S}*<uWEaRgeTBbDh$
z$y@orl?Ja(1Ii+tAOKq$p|YsaP45uL<cRk%8kZgIdTi^7BGyyVgoZxebTJLfuJu;N
zAAj|U0uk{R!{j4b$@9!ku3+W<+n=ZxfyzuQK@alkJ6WNb3^G8JYzFZOnwYC$&x7EV
z_Oi!u7>CS#PtuH%JOKY(_dP<dij$?ov+iW$tDj(@-jwTc2(2dQJO}1BRn*MT-p1Me
z6TWg<JGlSqQBi~j<9ZQX9Kpdp$<YZzpAJ&Zkr5LnAw!7SMlqkH6C@;FGD!<;rkbU7
zIx+oLn0B2I(J8AP)!nDoFx_c?1lyY~8biw&Z98Gr&^LTwTI(hm<E|4_R}Owjsa4I<
zIq?g_cfauV1F=!>3v|2!V}Jgq*eQn77?z&`IOa}%1Eth&j^HE~C~fhcx~r7uCf@xv
zWYkI<r48cw7knd~YZY)BI1xj+FX3{3ewMbm(O}5{{5z1shT01M4(!85T8xc!@wA`Y
z+KH_!l7aFMKqs2M(SR3l_+1FU%76>o3?lp@176JGt!HS+=$%=@XZ4k?L-&BMrakes
zA;VEYthkd-kM6|?0mi_c+^x;E!&r2%n652k^f<#4F5gq>BFGn|Un~W->z?)<ZC<OG
zZ$Pm9IiPdW`Pp_lxDjwrzr37A-w$0b=IWoloXPy-KhMpj|NEbqkRz|L5QWRx!5s#K
zJzWa?y91XCy4#s)UJqV_tx4dF@-#$IUc~WEVGbiDZyIwLIbpndK{b{;3I#@<ntP7<
zrjAV0Am>~gHBjo_UM^*;H?|p&IsWEO9|kjS*+2)v@G3AbrD^;28x`ujD9}?hJmmmK
zRZ1sTuRiZE;WvGRkO|j)M*-FZv&@Oa_NGe^a`=A$RhGRkhBu2T^maXa-(Jju$qcy;
z-+);sK$DwZ-41zYa&GSJ!?UHX`!>OqCHBP?84>$_{xTl>((e0}G7L!GQEEg$j?^mJ
zm)M=FOX*~eR^cZ!7Ka$gb@)ZzuPM^pq`*M&8CkU6^q)#HkfnE~N({0`4YG#>*&;L9
z=?LiCp_9fAkp85F^c9RWy>o8~PJ(7h(wTn!jk!5NqlU6bUP;LpTgWdLnbNW8#oQ&)
zMWoBX0^hueS>Ot=s@HGQjb-k+5zC}B`+RuRS=dVFdwg2-t|u!|RyytbQn8qT;lyz<
zwUp_-bfoEWkI=!7j<q8lIQ9C_O(L#ab~|5zI?g15(XWGHk2pVZ6K(Qd9r?^{h%6RG
zOlyrG;3&nTR!W1Jk28B&rx*SVE$q_`-g*5^O!3oQ%wt1<o!ZRgU&bbj9_&{a0ot^i
z0fcBB>>7I7M;EgxA70VrCSFX$;Ky*B*db)NHd_Tooe%Gzo{bsKQRh4LGQZi&mowkL
zgU`-xV4(xO>tMB_b6w{%dwDQe$xLJ!Q+r1-mv-(s2JpCzrus54E7F;LY%dS5tm4@w
zyspE~u=#nR>%MREnY!!nmqhNq$61afH{$Hwb?>LCxBmAQ+CD3={aXaX%PGT?&QG<l
z^@HiV)9E)cWPPxO(52EaAU)8+Yp$5&pJ7e$RQke2eBDT|(+_<oowv6zCw|hogXe(n
zDxL2KZ>1Gontt%NV5r6E#GBNWn^po0`!{)6>xv@p2km*66FFj4hPA}rrm_NK<;qwj
zum`coU+3XwJklq<Z*cDoq&yX_Cnm*e9Ah#|0~wHQ2{_R$5DZ>QFFTg-5D<b$3QsIT
z!1SfV-ZvZ=oK|y+iy*k#;(a6jr2MGCV_t!Kxd`vh7Vqbs??KkX9=Vvd8?7p$JpxKL
z+{b<v;_@n`d3<S9Y09Y5l(|alxHEAZ5yZYCYFZg;F=eX7Nl^=r)v`g-f{TsyVkB5#
zk#se!=i9`ZQkQOex4cOg8tW`;agVRG(t7+aW?D*CW8soo=y5GOdsbRC*<+zOxIj(5
zjmfeWqhSR`hUIM4i>dJn-|&FjkxiH1%B0It=aZGzx<7fwEN2m$VPvS^AzQgamU2zm
z^#6l1G{8@T+-ZHa&c(E`_79U!r7yz?g;~fB#&3D0zE)1%_;SXNoA2lJSf8tOhW9s0
zd1#CV?5_;p{ff@>uF<Yn1g&jMsM8?SX&vD<fj|lA!z8`;c4L;v=YmV1F|NS2c+Yat
zf4{*?PcOq}!6vDgJ~<{@p@aIXcXarg@S(2nXzSX__)6bBuhOgG65^|&IePcNFMR8s
zLg1cTZ42O3N2AWFi|Ar9*V(AkX}KPL%}pEasI#eAZ#1{1W$ts+nak5|oy78H^ZF?i
zPxGZ6=*EZ(^L-kr7vb7~9=Fa_ZR><U)|Bp;XS(-qnz}AKOh=fxszbXOJkHY|p6=r5
zHlEh=bPZ3J^R$4cukXV2)ti2Ss~Y+-$B$Sof3Jfd0#42!f7N3=kKXNV@TTqB{Ax@l
z{HgU;`ZKm`Qp2t{^3+pfyMO-ps~#=wH|)G75xP^0_WFadWc;?e#yiaS+go<t&~r`l
zpkIqewcu^>mTmqU+r2H#?OVwmdikD%NzEUP2etTZtu39MtzN&ky}4y;J7SEp_AKUU
zcZ{WtW7c-|T$H)px5oQY16m}h1fv6LD57Zbcr>n5H}7oQ+S0zxxSa?^`ch#v9!efm
zs&}{C2>0l*bH5hv4Mz_saW&GXiQ+qN_U^i&b>}VXNQW9vhSabUjwTXHv=`{~MMAxy
zfEo#CN_9u;&fU8yrOs$FD^{nD1$h0M64w%`a8d~+lw>rjBnH%Q7;^MQI4uS@L0&DW
zRCl#E3n{uH`y$Z;ympk1e?U$4!)5ilYm}-4zCBl!sIKZ;uT=G|Q<UnsmfWv~o8Y39
zkSl*MH+TBQxw)Ug`8u2{;d%+2bC7QXy&R}Hu(<(W!b^q*G^JM!g;R0uno_3UU=Soq
zC{;0~Uri{Hs1h1b`?Q*b7D$Go5uzwJhvLbU8h%Ggiyx$gLH1ryVpUMVc26j3Qc-m(
zqTTdz9r0)qXo->sLdkw55DjWd-C)%q;)%M)5?U%4Rp@(HD)Pn`36s%4G^{`yCJ;~+
ztS!~)XD`<iLVLJVGvlMQ0G5$KdZ>FemBe<XMzUT>s_{N837Ugj>y?8cEgZxPXb=Uo
zo&v%#LAd89b903mP603F`7cf}zv!v6+IffVddTLFXMDM@k9e%tb#+odvRt3K$9g?$
zyC#Qh^2DsyLECk|?K*6`p0Hi}Y}X#!HL>{xx9z&pc3o||j@jrbHhmno%eThX9+kFh
z8~%;kw_l@F-`L)@PT8=rc0;Z0Rmt=B&)+|P|Nr6p=MUQfv*(NOrRi>#ehkjyZkGNY
z&Wdi9;`{eXH%mL=Z0=_1;0hQ6x><Tx1tH09mJVM4V@EejABFRN$WK7}44e-_eiG7W
z;ruw{ryy;=5JE-BcR>09I3MX|>0+3upXg@kRd7BH`8r6ig>$l-#*O4<I8S%8lvEP(
zN;gYyg!8p->eESdC5&~Dk3o76&I%RegLDSY)hbKBzZ%99m8GA#gpdZ6rN4&Lqq21H
zaza{Fmabky$R5ZmkiHMjpvuz6;EbtsY#}eN1$`iWNIzHw<F(4tT~`wFfXdR}!a1(8
z^jB|zx+6ZM`0mmPm8DLIFP~Of`W-kYRhF)LD<LnbEZqlZT4m`)ZzJRlm8CbqNqSiN
zRXCUQu=Eq_K}|h$j)wCxvbKk%FefAHdsqtdGSbk)QV*UzEDgiygFMXJNea%+p1+mB
zo<Gjz;V3F_78N==9L0ss;(E*h4D-8KzQmM|)vyN|PU!cmmNEOrG!sq(z;|#QOexLh
zO!Nh>vLbI;;i5wYbv79YKTWi=$!LL_>$58ZOyI35>sobWF}ZMX5n0~vBufiR9Loqw
zVZtvf+61!o=(0VUhd1V5&w}$`=TV2V&DUqi$LCQt8%{if%t9Y#Juc6o+rO_#pFhsx
z@C+IG2M)9E)E+d!itdFm=$`E5hYqpyL7pDx=>$(-;^`YaT|Ugxi+Nhj(`$yUba(LU
z9-hW|`fi@y&(nYA>7zWI;OVz{`XW!Kc={So-{9$+JS}F+-Nen)i+Q?+r|WsTnWr9}
z?%-)BPygYtwI1j7!_sW}S?Orj!dg<>9uFl$0X4jvuRAq4ypg09w}VNt;6^RkswR?N
zwp4a!VM`>0D|n$hB^oalwrc8r2~48S-CD9M(yvB>VJ+w#3}`XDaYHB!9Lal}yTh6m
zBmd&;3@3ou&A8%2o^@K+vj}<KX<iw_PXYb@?fyhe3*gG2pHT-1_X506OXBLK8t+RG
z6|O@dvliJ8K^f$uJ^tQQgnn!2_b0TZUya55$%8QsT9ZLi2`$do0}1&j;#UU}eSU2)
z1X6sC_ya8W1mvOv_<b!zcn*Ir%e6ZwGpN`A`5x(wYZ`u;FrW<tVj%PN1^#G+7Js%-
z?TN;d<mZK;Df;E(?+O{+MMb@_cqo$WCFMoE2SArV;o71Bj@4C!YoTfwW&uTsWIU{a
ze)nN65*Ub)_Z96Ih4C1g-+7aFSG%`$V|{Hf9L8c5Lx0_KAhACXPYQ1Te;zR3%eel2
zQ5LwqUSFB{{`uqlasK$vb~td^1kWKm9Q$}(1~?x0S^S>kgnYoXU%_>69~{sh+%&D(
zP+PY~(ISB;K1gX=)75!HP2(CRk%U1~4Z{%BwC13eSo8MlORrNC32mS!d{BY%kwnv)
zR6KG`BG9i5sEL|^P#_*nM0=ApFw$M4CI)KvZ&;%YsF6^wmPp=gW_Eq4qFk4ZrxMAQ
zNN;qW#5U4mP%xndQurv5T>>Dky)y+Yv|vX(v_BNq`m}_&XTIwlgn}4Lv}*gcuoA}q
zO>5LdOJsj^pB7(pl}_-gtQ4=i%FO+`tMp3HOOQ3DCPO`;Fh1$bTP+JZYK!xL5F;F7
zPr!7MF0ZM<r<X0wN{@z5Ohb_%qTmxg16xU?VlfC5=p(>e03~`Lq1+sTmQ-qLbW$8i
z3+~*lv;>>hyi2RE+pwWw)73Q_HZ^RnY1kOpRHJU{)oSYM8iSgqZ47Sgt-IT#o`uVD
zbxt`pZrZT1v1f}~vnjX*<ml}Q)--DM!5X!`p`ot6epBz3jq16PqcNu(4QhRFeWSLq
zX4A%=Ej0}d4I65D)GdLU;N~sC2DL%mtZi&OM{?9|$SKK&-pyBU4qUytrm;@jP}5Mq
zaZAmXO+7s|jT?h?y_<t|LG@}XiSi#8WkX#~NgB1f-mBFO^))@cJsY8Iw8k1}sZBKv
zjlIE5b?Syq>K4_I<hrYDHhkSx7Gnoja+UBU*O!v>N0vi@*#aa-zCfshuRz#%_jqi4
zX#B|d*f?%-(h8vN@qT~}0xb5>&_iPnjX!k!p^1kkADVh-<{@&-eM~u4cg%CF<5>5x
z*s-BwW5>pi9X~d4Z1ULDv6*A!Q|?bGpCWYs7JSrDJg$s4j(f)cUR6GS7)Na{j6IOz
zCOdD=5z^;?sgO3P)dmb4n6}a@9NuxeoI-@`M@X>_f!Qp5_rq<*iEBw3O>hWKff2M?
zhX|^Q1>z!XOCtlalCWKs49FE+HV2d~%rXJl4(CMzheGfxD5Z$eD0CDP^ID~NlMN=Y
zWF`*|E@DjP!NIRJh6;1zoFZ%oq+B>taDL2Ei(g?a@|1D{Xey6{xF6N;Ib{Z`cd(L(
zyNJ|={aPe=fUMFXcw7hBDu*ZqI576dlMS{~gzT`Cx(TwK4s$K;fU8&@2@e5iC=brV
z0Gh~y^K}3n&x7*<fX4IS{1QN8d2lc@k*D3?f|)!m*an&IJiJnnnaRWJ0muv%nl=Av
zfYjxo{C&uH^5FadG97tvE`ys>c_eItn|Bon2_clA>rTT?vt_;ma3*um5&NeRey7m!
zsFT<>>=JvYi87h|hS<Lh59)0k>t!T3QiaTG6=#q~9PcS)_p{-MJ=O4VQXKrq#2TxJ
z{n_v+qByunwMybO0=(*Ui&`$%i~D&zxt~ASHvp5d8u0f$TA#ps00>M7&1dnepT)M&
zTSsV~l|t^z<eHv^=JAb<McHt;#!yd8W5qHK*BI)FX-tej)&n)xF%OL$Btl~d{bQjW
zZ-QGwArWKKj|$n=a}0u`9zv&bXjSNNO4nh8*th>XXF7}<gjn6XWgM>OaU%4*M8@HI
zK1_t3m*^TWAE@WpJoNklBJ|uB2%yr;AqX7hz@%eQb{)n{@A?$zl3WI*KCsB_Nj3mv
zERRQOFEZ(n`2DO67caKkJd+3M{Fq2RS8A^e9zbd@+m?^SXbaq7fVIV18Hcw8e#TRz
z<CI8v*cM~+Xp4^$(H0RkNym4iF+|<#7K^$|Wc0ebEp@ly@Va~Sy1QjUT;}8Rkoh59
z<^!Q{FrdbR3zJ#VWzNtRT;>jvy?+UrC+8vamvxzg;V=f(CY#3xKM1N@oZoL4^(xC+
zuR4<7Z{(_%utVJaEuZgwjO6zTGxN~T*ND)MKcXF=d&f#`>X}EIo?YGLb{8_c7v-1v
zXS&SEa3Yb4ncbM*KN$3@j2Ddx801bu_UI5i_7;hHWgmq@fD_B($1rw&d9m61-Cx8Q
zu~<vi;bMn<tUMbXc9ZOVS?th?M+wPdKY+7#@7}$|xp21c>Rh|0b!#0lM^+he_WE++
z@Np1jW;#TQ&J1*#w|3;B!*KTQ$%VuF&S@h0jw0jmzB56x`*2>b?TsWyRLO9fJvngj
zpb_Id?D;oD*z;h7Jz$pmU`O$}>4Uh0kgpGR%tK~}LyvOlqxQiJe&bxpJVbK%OxhML
zTQLI7Z9gr0tMlS)-%9f1>~-hB!Gp$Q^U&c6U55i&JZ=rf#Men3#rel3L(i8v*jl3r
z=UnMIZp5psUieUYu@#5+LEI~Y^}*FL9o`3DA^FFzv3cn55?zOb$^KwC8ZfC*=qFZk
zHg=djCK)36W0K?ZkhxZu84Swb8{1H42o0C`{aTXAoVndO3ej;g)Krd4MNK{AKWGWO
zl`9<iqm&tvzm+HFp|M7zr{LFi{(dbS)8dI*io@$ZG>=w3ySiuhkTdg;`DR^a_DNg~
z{Upw4>3=E`GAkM7f$k3hY9KL2%&W5hTEyn&2IO(v&tK4?kY@n${Uv6|&jIq8ax>)r
z0OZ#eh!YxfaG5!hxy;GdSPfop1;}`wi0C%JIX;hdB%{4PUTohG|7_Yz*H5O1h<mLm
zhmhwsiITAA)w(_VWIEiQardht9Y=0^8o@5kZyWu(ZJ1s>GkLBfPUdM1&3^<S%JSUt
z>LY;jzU6kGz)GP!50Gpt9v+fk&$>K0qOYK?!%7*4>#*68f7PgN9y*MhJpW)a^UP&p
z`ML24$H_dRrg_MG*kO7GBwk=Nwfi@nLgw5fzEQ6$Ky>Sj^la)iLGrihU5*?pRJ?zA
z^!|=(xi)!tyWj4Z$12u5boeocY4(@wH!nia<9|8X6CI=PqybXwFhl+f5Vr+V0@<00
z-2LlH!1>?>W)FD-Kz3bd_M(1({Pse7A7qrVUVkaD|Cq?xw3l8lN283x+v|wlUh<cD
zqAmLMwm=-YU1{_+kG42wZi|6{c@fK~`$cEd2eU_Cienzp*F0qYg2TMpoUk~cvyr)j
z<ZmxSX8SH4hRl=mkog58me6qD0Gr8^`xXhAvs>@S04H2&w%*SI#JSQ8!Cw#gjs@}~
zfULUM4EY^E_E{i{pavJMGD9u|$W0c=Mu2>EmDDeEJ%7GPnu(u<p6hbhhUgb3^nM|~
zge>~SgO2>qfM#;F7q8d&YEiFx8RuNpOFYq7eQs>k;HAh&gvU0;`EB)o+hTPQ-7H+@
z9IM3h@CkMEka<Rz+3%0}*_-|5KGwBZ$eg`@bpwt&$Fo|w?rsZ?x$fP1-LpT@$W?b?
z^J@$8&(Vqs@{h|M^Uz^IfklV>O9?}ZcY%Ip^5}2`7Zm29!<l*LFh<Ue4%g2^hwgdk
zFg6bzURYorn`$f!#pf=%%oO?=)Yv7t-_rSx35R*(Ujk&~CFZzgX|Vw@{4*<sGJA-9
zCn}-mAtLnbmT@FKXOA-*bUjzdI9$)G3-Zq$#^#~t@9BD0F%TCY2-OO_7NFs|B)hHZ
ztNOZrFz(H4hhrqa9d^&d4t)jrpA<LD!w!$<(vMh267?eHU&CY1d?lF)`=z<HS05{4
zD}p*?6OOqSNCU22SRk8s6zUMpeQ-hCAC|aJNZiLI?mZIsp#^b&MB;u*;{LG2J${b3
zAD6gKO5Bf2+}|y6Ke8b1k4fB5OWaRL-0zpTk1dG%35olZ#C<~I{?8Kk2N%Tss}lFL
z#Ql`S{ZWbg_=31kNZe;6?voPt35ol|3*!E?#C=xcep=%G?Q_Kal*Ap2Sh-J0++RFL
z+@F!S7famJ689;I`|$;FpOm<}CGIm4_tzxuCl<v01&Mp5#C=xc{)WVTVnN(bOWYNS
zJF(m0<~JqorxwKhC5d~r#JyPJUR-47KDi+7Qxf+&iMw0k?v}WpUJ&<JB<_t8_ezQT
z#S-_a1#wSH+&vO^MdH3j;+|d*_tzxuK8bs^#C^TQeP%)2XC&?&68AcZ`(}yz?1H$z
zA#vX$ac`8kdnE4U(uHuJmAH3H+&vQa9TNBA1#v$kaqpM7`y}q25_k84xMRR?<sOr`
zcSzj-!Qjs4J1^<;onCbx0!&ALL>)ko5t;WU`%{s9Y{kr43q{l-(>%pquS_`eneVV#
z)K>_3=zOp+6OKHaFwZ!6-Rlao*ZuEMuZBHB!c22vUW>tkyf{}E3ERl@Mxwo5XJvI`
zlFdIX#dY{wN>;18MjBzO7sUO3iTk+3eMsV7Epe|~5ceYz_Xj2JgA(_PCGL$2;(l1-
zJ|=OGN!*u9+&v58J|uBJB607RxW7?g=k8k&_q!zSLlXCHiTg_u_l^Z|AC$NcO5FEI
z+$SXNdltk!DRGZU+&d)h$0hFF3*sJ=$2f_*PvZWd#Jzt(+{5ztE^+rr+=mSA+|OU1
z!_SK`&Y&a4I1?|i_VqU$<A{(a#~3Ho-K-y8_ttrgaeu>lHH_)?%09*&&p!@c{eZ9y
zN4bo{>#i1N_}+?sAIXkei$&d)oX^qz7W%<spxDd{S9E2>cL7ePzTTVpos;+B8g-ua
z-j4##5uI1|x0EMytqI2yaq$qRlydR=2Lt#<y?76nt@(c%vNN0xgM16F#O#<so&|_#
zQwI4JZ~Ousat0s|a+w*Vtb}EaQk5mf7{?$DCG5+31E-_J_y&_f;s~+Oc@IFkE!@ZW
zL+BD6f<Lu4q|<@Ahw=LY@oqeSZeC(|eg^qYiCr5%E-}8ZEYSB98@D`{Ia9*y2Y0e(
zkP1|}+YG7UA3-hBDQ_<o>&AjkJH=5<rTR;mH5rh@rS@8Uq}1?-yrx0sGYy<aON}Q!
zfRhX-@LOc@H37r<L8<Zm7jNZKBNk<lKb5lY)(y%_%8ciy403rH{#dlRz3R*CGH)w0
zzRzWly=CSW6#KB9u;@oCGrkIEko{%GTZ;_x@iOE6D4@f4W1G?G`0?f4woa-a!+!p)
z%!oW0<f$@ydwsvmm|OAZab<REDPLl5_bPzIETtL&GG)<ND?ox4UcF1$(@CS$JC_)5
zJ2S|80isywd~yl<y3?R@Vu=yYGswv$##c5B@<V_OStNX8iSaCnK}x`pck8^^j(B1%
zPPEQj%Z;~88Kkq^%**c&hQoe8y<_Mn$cG36a<JTph#2Jk<;Hsj4Dz{h<GXbRd9vL2
z>W4wTU2boSsdD4Xy8<Hi^P9BPVz!+57K2W~QqYg3EtUeL(gInv)NBc2YriQA<t>0C
zW`6~Q?WJhUI2g_?fTK7KZ^NF(i?2VpPgrV<Xbh5C%APYC@*F~$EtJOqGGS@uV@sLl
z4anD*8si}KBq1Cx#P=6mt4o>3Hn{(Esof{MzSQ{sok3Q(j6Dq)WP^*n&t`CMburB|
z?qc`ES&I&DaWT(kXd~icwP4)E{))wynoA9F9E1A@U3UG9yNull7-Rw<dn{W0E^@cj
z;@6zAVPp6>z1wOn0O_z=3mT!tk6pvf(xB4@kU@)n2HfHqtEktz+{V0#K|TzSMhmZT
zfW$12FS=RuVeop|jiZja1)m4VDGT?P-R4mSkKel48#tzM=T5e>favcq#PI%3^iprS
z*}IMg9R+vLw@6sK%p6NlJ5=p9cHJ`Z+*4@dCV-4tDBrTonAH}r_(wHc3m##>nX;4`
z#?SP@PZ;|7_%gfC{K7KUdJISGDJtGKW;kD6CZ0|T2~RF#@2VNRez;6LKNUE?TxRT`
z!XSSJh{vLzlI6z!2@G=aa^uYz9&Z3-+}b+e>l!Vkwk>D=(1-zcE@%6O7`%FrmxX(L
zIkOgn*Si7IZ>jq~0%X!c=V5^0>XWH|0c6UEtoV1V9Tqx2ST3IQp?<_Jt7(hIeuCUB
z68>hnu~QAVy5+_j9Sl;jf?0ym%IhUa6GAL>I#(EP2{MSfg4sOxnS9sS35$dWR+vWz
z7D0-qIRa;71=Eiq;TKl0oFUJ*B?*5Dkkb}D|6zr(6ASf+bmv)O@rR2ljGbW^<bn!g
zPaf`(05WT#+)`nz6)=du!XE$JQ(^2C!^fQpbKeoW-nw;p*v`A+iK>uryu$dRr+|D3
zt_IYI+NTB8Sd8?m34b7vjK&H50zVY#jp9}W^tHuMWWO2?1v}KZI-n)BxR1Yn6^m>B
z0NwGIzx}?pHm>!?lJQzmQr}$IexG%2J5+2bY=^hCwBLA(zomV5=hoI%f3tU6*Ny(R
zt(`vau3ZwY*t(bs2kbM7$NPl@4@Sl3{N$EUq)iP)AhO+!3Q5KE-G>g)T{cWN{Qjg3
zBB>*yCPVu*Rz4N;LyWX9FA}6lSwt2<WP++0pn;6IflRo;gAqE1L52A-j_Xk~2-z1&
z`8BbLwZ89kmgbL!gMb@LX2%N+#Qeq%)q#F3u+Pt}5{)MtVJr|%CW7&3(%&162QsM1
ziU@U^4_+b_&4x#Rsm|Y{CNvm+gDJKfpyrRoz#RaIgj}L89POduuo~8|EmH~o6Wy))
zN48r<xjXN?6Zh^81pINWFO-08=I_P+#(_c22F4!hH+~Dz-xKP?*dU}vq+8)oG8xvy
z-R*7aK5hH<=s+w4O|o@cOKkwB5m7F$KL}1BVSxlFM5^ER&Yipbtu4DdK_MZ1U-Tfc
znvztG&lRE5grQ2v%~XP4#x>ln(a(ONa6ld8yQwE2AK&NaKNsl7kxT6fYa|Z(jY5Bi
zJ{{@}f$1a!zMmq&9c>^QKS-cX><dIc{Q{BrV_Ilq<7Pkqxk5kxsXkzOKxN|B*2xv$
z)z#kF(&qJd?Dlpw@AU8Tw(i`{6ya@e24$Q@0YA9gu7nnE1Fz+c$90z*S3_WE!j}oC
zZFlx8osnZF`{VvV!g|G8WS@4BDjEzUkpu+)fz1sDmKqHD1%`Ap4tfL^Wx8+NN=0<I
z&eq@Ax?A@p=8r#XkT+W1%{a6`Pin#bwGFx#@!t@N1UtN92Yu`1wu9}gQ!w&3YDs?M
zhG?Asykv%(+oRCHHcGgCE<v0QuZed{qCFZBhSd_;o{Gn{NRlGxbhSuo06iC)XgJgp
zSK|l$xT=nv#Vhk!Tphb-ek(i+qPVL!ycmW3F)<7q4W9cpBhi<eMDE*J?@-@id2yIn
z{S<W`Y+<=JAx1~~8n1B~vtCknQ@eT7rj47>{&IC5rYyE};>WfCTZRAow0J}dZ>;yL
zP$y<C$byZmw3xry<h(3xlk3+S{Qa65G}y4M{J}N%((yFk5XIQ=6%sM@nQVeOKp|qD
zsKD~O6yPtD;MZus;uJ{EVTi371^S^i15ht$t`HPNMc^-)`lG!_1V&;s!Vps!|9~YL
zOu<MJN+1FA&q>%z;#c|c{TeH({ul5yiBwPGAlSu#pYPMn+5r_f7&f&GswMNUba0jB
zHulWJljX-V1lLdoWm`Hay)b_M!YIe);Mt-WqaBG9mCkQW$QnPHe<Z~3?@1(Vip%(;
zAUXRG8?lV$0}GFt+a0M|j4e~FoX_Uzd?a%~lx@P0H88XNGKy%Fm`xKIe~cxgdgc+d
z&UfH9gkcs!NrLT16DFh2_){}^rZ~1J-yTVcfC&0TUj%=ln)2q319~dXPM}Mw3FL&<
z2~h;LTFcf>T~bsUe?pMYI5Rpx?rEhd7I(d7Hhjs!+C_x{n}5B==5GzR&W&FX<u%<O
z2!w&MUQ^y00ja-cjrns;*O-8rTaN|1U^gU-zcyqMW=ex}({G_8idi4|CT2_=zM`9V
z+G86cfUO|F7BhJJv#}}9WDgu9%p7dShQ+i0IFhwlbKxN!?rkxv|Dul=Ml4-PR5wO9
zULuksrUq{FkO33*oMSyh=W9>)fWh+1Nt_sc_>jf#Fv0BcyVdKO$4q7|Nt5u#_~|E>
zK?zA)#|0Z3X?cbBLPN7$iLsbPjixA+fn?XqpLy!qwT-isj{b{Kxke0=q4G8~B8zMb
z6B%dbCU(NU>B9@#%9CJY4PAwiF^Xn83rAI)N%w};zJxsV8)|}}YF{F`&p(imJpuP3
z=8lN(W^fvL;&VQdWR9ZPJy~kq>dXsqwpAe8veG<O+-#N37Odr;C0kah44XHNo#u$(
F{{kVs2c!T1

diff --git a/cmake-build-debug/CMakeFiles/3.26.4/CMakeDetermineCompilerABI_CXX.bin b/cmake-build-debug/CMakeFiles/3.26.4/CMakeDetermineCompilerABI_CXX.bin
new file mode 100644
index 0000000000000000000000000000000000000000..2974ba101edc5fa78f82d399dcd0f27dc29fd35d
GIT binary patch
literal 43088
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
XmChEM<)0MW7OqU2w+xlm0O0=uV#Et;

diff --git a/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdC/a.exe b/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdC/a.exe
new file mode 100644
index 0000000000000000000000000000000000000000..b9e1e99bc6d902db123b2a955e8ea078b21eeef4
GIT binary patch
literal 43144
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
TRff+qhoVs`D88L5B^Cb%OJ#RB

diff --git a/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdCXX/a.exe b/cmake-build-debug/CMakeFiles/3.26.4/CompilerIdCXX/a.exe
new file mode 100644
index 0000000000000000000000000000000000000000..e6b38016c24fcd0c3fd0cf89767c0aa8e79ed642
GIT binary patch
literal 43172
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

diff --git a/cmake-build-debug/CMakeFiles/Final.dir/BasicCalculator.cpp.obj b/cmake-build-debug/CMakeFiles/Final.dir/BasicCalculator.cpp.obj
new file mode 100644
index 0000000000000000000000000000000000000000..ca17647d8f0a9a95341e755dff6df64eda1ab58a
GIT binary patch
literal 26385
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

diff --git a/cmake-build-debug/CMakeFiles/Final.dir/Calculator.cpp.obj b/cmake-build-debug/CMakeFiles/Final.dir/Calculator.cpp.obj
new file mode 100644
index 0000000000000000000000000000000000000000..facf9038d840dfd610ed251ee369225036567ab3
GIT binary patch
literal 4828
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
N``lpz93qv$$iKGg%J~2Q

diff --git a/cmake-build-debug/CMakeFiles/Final.dir/ScientificCalculator.cpp.obj b/cmake-build-debug/CMakeFiles/Final.dir/ScientificCalculator.cpp.obj
new file mode 100644
index 0000000000000000000000000000000000000000..ab8b8fb3f402a439dffc2a9f8471d67db669110a
GIT binary patch
literal 25944
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

diff --git a/cmake-build-debug/CMakeFiles/Final.dir/main.cpp.obj b/cmake-build-debug/CMakeFiles/Final.dir/main.cpp.obj
new file mode 100644
index 0000000000000000000000000000000000000000..eeab11522527368f8602eba27a79794b71fd118e
GIT binary patch
literal 145383
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
aGo5J4txmT?4U%#Oq19WD*M^>j=KljDVkCtC

diff --git a/cmake-build-debug/Final.exe b/cmake-build-debug/Final.exe
new file mode 100644
index 0000000000000000000000000000000000000000..3f91d807fc0aa7f29475245302950d344c934157
GIT binary patch
literal 253004
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

